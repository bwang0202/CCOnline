<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_31) on Fri Feb 27 05:37:08 CST 2015 -->
<title>RDPModel</title>
<meta name="date" content="2015-02-27">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="RDPModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/RDPModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/ParserFactFactory.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/RDPModel.ITokenizerMaker.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/RDPModel.html" target="_top">Frames</a></li>
<li><a href="RDPModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class RDPModel" class="title">Class RDPModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.RDPModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">RDPModel</span>
extends java.lang.Object</pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) static interface&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.ITokenizerMaker.html" title="interface in model">RDPModel.ITokenizerMaker</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) java.util.Set&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#keywordSet">keywordSet</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../parser/IGrammarSymbol.html" title="interface in parser">IGrammarSymbol</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#parseResult">parseResult</a></span></code>
<div class="block">The result of parsing an input file with a statically defined (i.e.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) java.util.Map&lt;java.lang.String,<a href="../model/RDPModel.ITokenizerMaker.html" title="interface in model">RDPModel.ITokenizerMaker</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#tokenizer2symbols">tokenizer2symbols</a></span></code>
<div class="block">Preloaded symbol lists for customizing tokenizer for various languages.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/RDPModel.html#RDPModel--">RDPModel</a></span>()</code>
<div class="block">Constructor for the class</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#addRegexTokenizer-java.lang.String-java.lang.String-">addRegexTokenizer</a></span>(java.lang.String&nbsp;name,
                 java.lang.String&nbsp;specFilePath)</code>&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#addSimpleTokenizer-java.lang.String-java.lang.String...-">addSimpleTokenizer</a></span>(java.lang.String&nbsp;name,
                  java.lang.String...&nbsp;syms)</code>&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#checkBNF-java.lang.String-">checkBNF</a></span>(java.lang.String&nbsp;filename)</code>
<div class="block">Assumes that a BNF file was already parsed!
 
 Finds all the non-terminals in the parsed BNF 
 Then creates a parser visitor factory and runs it on 
 the file specified in filename using the selected tokenizerClass.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#checkXML--">checkXML</a></span>()</code>
<div class="block">Check the XML for syntactic soundness</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#parseBNF-java.lang.String-">parseBNF</a></span>(java.lang.String&nbsp;filename)</code>
<div class="block">Parse the given BNF file</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#parseOrig-java.lang.String-">parseOrig</a></span>(java.lang.String&nbsp;filename)</code>
<div class="block">Parse original grammar file.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#parseXML-java.lang.String-">parseXML</a></span>(java.lang.String&nbsp;filename)</code>
<div class="block">Parse XML file.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/RDPModel.html#start--">start</a></span>()</code>
<div class="block">Formally starts the model.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="tokenizer2symbols">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tokenizer2symbols</h4>
<pre>java.util.Map&lt;java.lang.String,<a href="../model/RDPModel.ITokenizerMaker.html" title="interface in model">RDPModel.ITokenizerMaker</a>&gt; tokenizer2symbols</pre>
<div class="block">Preloaded symbol lists for customizing tokenizer for various languages.   The key names 
 correspond to the concrete ATokenizer subclass that does the same thing, though the 
 CustomTokenizer class will be used here.</div>
</li>
</ul>
<a name="parseResult">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parseResult</h4>
<pre>private&nbsp;<a href="../parser/IGrammarSymbol.html" title="interface in parser">IGrammarSymbol</a> parseResult</pre>
<div class="block">The result of parsing an input file with a statically defined (i.e. explicitly in code) parser.</div>
</li>
</ul>
<a name="keywordSet">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>keywordSet</h4>
<pre>java.util.Set&lt;java.lang.String&gt; keywordSet</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="RDPModel--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>RDPModel</h4>
<pre>public&nbsp;RDPModel()</pre>
<div class="block">Constructor for the class</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addSimpleTokenizer-java.lang.String-java.lang.String...-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addSimpleTokenizer</h4>
<pre>private&nbsp;void&nbsp;addSimpleTokenizer(java.lang.String&nbsp;name,
                                java.lang.String...&nbsp;syms)</pre>
</li>
</ul>
<a name="addRegexTokenizer-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addRegexTokenizer</h4>
<pre>private&nbsp;void&nbsp;addRegexTokenizer(java.lang.String&nbsp;name,
                               java.lang.String&nbsp;specFilePath)</pre>
</li>
</ul>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">Formally starts the model.  No-ops for now.</div>
</li>
</ul>
<a name="parseOrig-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parseOrig</h4>
<pre>public&nbsp;java.lang.String&nbsp;parseOrig(java.lang.String&nbsp;filename)</pre>
<div class="block">Parse original grammar file.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filename</code> - The input file to parse</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a result string</dd>
</dl>
</li>
</ul>
<a name="parseXML-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parseXML</h4>
<pre>public&nbsp;java.lang.String&nbsp;parseXML(java.lang.String&nbsp;filename)</pre>
<div class="block">Parse XML file.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filename</code> - The name of input file</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a result string</dd>
</dl>
</li>
</ul>
<a name="checkXML--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkXML</h4>
<pre>public&nbsp;java.lang.String&nbsp;checkXML()</pre>
<div class="block">Check the XML for syntactic soundness</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A result string</dd>
</dl>
</li>
</ul>
<a name="parseBNF-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>parseBNF</h4>
<pre>public&nbsp;java.lang.String&nbsp;parseBNF(java.lang.String&nbsp;filename)</pre>
<div class="block">Parse the given BNF file</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filename</code> - The file to parse</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a result string</dd>
</dl>
</li>
</ul>
<a name="checkBNF-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>checkBNF</h4>
<pre>public&nbsp;java.lang.String&nbsp;checkBNF(java.lang.String&nbsp;filename)</pre>
<div class="block">Assumes that a BNF file was already parsed!
 
 Finds all the non-terminals in the parsed BNF 
 Then creates a parser visitor factory and runs it on 
 the file specified in filename using the selected tokenizerClass.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tokenizerClass</code> - The name of the tokenizer to use.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a result string</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/RDPModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/ParserFactFactory.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/RDPModel.ITokenizerMaker.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/RDPModel.html" target="_top">Frames</a></li>
<li><a href="RDPModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
