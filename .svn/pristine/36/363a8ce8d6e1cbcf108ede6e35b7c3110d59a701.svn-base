<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_31) on Fri Feb 27 05:37:09 CST 2015 -->
<title>Logger</title>
<meta name="date" content="2015-02-27">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Logger";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":9,"i32":10,"i33":10,"i34":10,"i35":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Logger.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?debug/Logger.html" target="_top">Frames</a></li>
<li><a href="Logger.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">debug</div>
<h2 title="Class Logger" class="title">Class Logger</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>java.io.OutputStream</li>
<li>
<ul class="inheritance">
<li>java.io.FilterOutputStream</li>
<li>
<ul class="inheritance">
<li>java.io.PrintStream</li>
<li>
<ul class="inheritance">
<li>debug.Logger</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Closeable, java.io.Flushable, java.lang.Appendable, java.lang.AutoCloseable</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">Logger</span>
extends java.io.PrintStream</pre>
<div class="block">Decorator for a PrintStream that prepends to any output a reference to the line that called for the output.
 All methods forward to the decorated stream.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Derek</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#LINE">LINE</a></span></code>
<div class="block">If this is false, Logger is a completely transparent decorator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#out">out</a></span></code>
<div class="block">The decorated stream</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static java.util.concurrent.atomic.AtomicBoolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#SET_OUT">SET_OUT</a></span></code>
<div class="block">Set to true after System.out has been decorated once, to prevent repeates</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../debug/Logger.html#Logger-java.io.PrintStream-">Logger</a></span>(java.io.PrintStream&nbsp;out)</code>
<div class="block">Creates a logger that logs on the given stream.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#append-char-">append</a></span>(char&nbsp;c)</code></td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#append-java.lang.CharSequence-">append</a></span>(java.lang.CharSequence&nbsp;csq)</code></td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#append-java.lang.CharSequence-int-int-">append</a></span>(java.lang.CharSequence&nbsp;csq,
      int&nbsp;start,
      int&nbsp;end)</code></td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#checkError--">checkError</a></span>()</code></td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#close--">close</a></span>()</code></td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#equals-java.lang.Object-">equals</a></span>(java.lang.Object&nbsp;obj)</code></td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#flush--">flush</a></span>()</code></td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#format-java.util.Locale-java.lang.String-java.lang.Object...-">format</a></span>(java.util.Locale&nbsp;l,
      java.lang.String&nbsp;format,
      java.lang.Object...&nbsp;args)</code></td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#format-java.lang.String-java.lang.Object...-">format</a></span>(java.lang.String&nbsp;format,
      java.lang.Object...&nbsp;args)</code></td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#hashCode--">hashCode</a></span>()</code></td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>private java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#info--">info</a></span>()</code></td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-boolean-">print</a></span>(boolean&nbsp;b)</code></td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-char-">print</a></span>(char&nbsp;c)</code></td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-char:A-">print</a></span>(char[]&nbsp;s)</code></td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-double-">print</a></span>(double&nbsp;d)</code></td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-float-">print</a></span>(float&nbsp;f)</code></td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-int-">print</a></span>(int&nbsp;i)</code></td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-long-">print</a></span>(long&nbsp;l)</code></td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-java.lang.Object-">print</a></span>(java.lang.Object&nbsp;obj)</code></td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#print-java.lang.String-">print</a></span>(java.lang.String&nbsp;s)</code></td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#printf-java.util.Locale-java.lang.String-java.lang.Object...-">printf</a></span>(java.util.Locale&nbsp;l,
      java.lang.String&nbsp;format,
      java.lang.Object...&nbsp;args)</code></td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>java.io.PrintStream</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#printf-java.lang.String-java.lang.Object...-">printf</a></span>(java.lang.String&nbsp;format,
      java.lang.Object...&nbsp;args)</code></td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println--">println</a></span>()</code></td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-boolean-">println</a></span>(boolean&nbsp;x)</code></td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-char-">println</a></span>(char&nbsp;x)</code></td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-char:A-">println</a></span>(char[]&nbsp;x)</code></td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-double-">println</a></span>(double&nbsp;x)</code></td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-float-">println</a></span>(float&nbsp;x)</code></td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-int-">println</a></span>(int&nbsp;x)</code></td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-long-">println</a></span>(long&nbsp;x)</code></td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#println-java.lang.String-">println</a></span>(java.lang.String&nbsp;output)</code></td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#setOut--">setOut</a></span>()</code>
<div class="block">Decorates System.out with a logger, if it hasn't been decorated yet</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#toString--">toString</a></span>()</code></td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#write-byte:A-">write</a></span>(byte[]&nbsp;b)</code></td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#write-byte:A-int-int-">write</a></span>(byte[]&nbsp;buf,
     int&nbsp;off,
     int&nbsp;len)</code></td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../debug/Logger.html#write-int-">write</a></span>(int&nbsp;b)</code></td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.io.PrintStream">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.io.PrintStream</h3>
<code>clearError, println, setError</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="LINE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LINE</h4>
<pre>private static final&nbsp;boolean LINE</pre>
<div class="block">If this is false, Logger is a completely transparent decorator</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#debug.Logger.LINE">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="SET_OUT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>SET_OUT</h4>
<pre>private static final&nbsp;java.util.concurrent.atomic.AtomicBoolean SET_OUT</pre>
<div class="block">Set to true after System.out has been decorated once, to prevent repeates</div>
</li>
</ul>
<a name="out">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>out</h4>
<pre>private&nbsp;java.io.PrintStream out</pre>
<div class="block">The decorated stream</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Logger-java.io.PrintStream-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Logger</h4>
<pre>public&nbsp;Logger(java.io.PrintStream&nbsp;out)</pre>
<div class="block">Creates a logger that logs on the given stream.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>out</code> - </dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="setOut--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOut</h4>
<pre>public static&nbsp;void&nbsp;setOut()</pre>
<div class="block">Decorates System.out with a logger, if it hasn't been decorated yet</div>
</li>
</ul>
<a name="hashCode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hashCode</h4>
<pre>public&nbsp;int&nbsp;hashCode()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>hashCode</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
</dl>
</li>
</ul>
<a name="write-byte:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>write</h4>
<pre>public&nbsp;void&nbsp;write(byte[]&nbsp;b)
           throws java.io.IOException</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>write</code>&nbsp;in class&nbsp;<code>java.io.FilterOutputStream</code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="equals-java.lang.Object-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equals</h4>
<pre>public&nbsp;boolean&nbsp;equals(java.lang.Object&nbsp;obj)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>equals</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
</dl>
</li>
</ul>
<a name="toString--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
</dl>
</li>
</ul>
<a name="flush--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flush</h4>
<pre>public&nbsp;void&nbsp;flush()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>flush</code>&nbsp;in interface&nbsp;<code>java.io.Flushable</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>flush</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="close--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>close</h4>
<pre>public&nbsp;void&nbsp;close()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>close</code>&nbsp;in interface&nbsp;<code>java.io.Closeable</code></dd>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>close</code>&nbsp;in interface&nbsp;<code>java.lang.AutoCloseable</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>close</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="checkError--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkError</h4>
<pre>public&nbsp;boolean&nbsp;checkError()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>checkError</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="write-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>write</h4>
<pre>public&nbsp;void&nbsp;write(int&nbsp;b)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>write</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="write-byte:A-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>write</h4>
<pre>public&nbsp;void&nbsp;write(byte[]&nbsp;buf,
                  int&nbsp;off,
                  int&nbsp;len)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>write</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(boolean&nbsp;b)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-char-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(char&nbsp;c)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(int&nbsp;i)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(long&nbsp;l)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-float-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(float&nbsp;f)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(double&nbsp;d)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-char:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(char[]&nbsp;s)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(java.lang.String&nbsp;s)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="print-java.lang.Object-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(java.lang.Object&nbsp;obj)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>print</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(boolean&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-char-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(char&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(int&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(long&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-float-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(float&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(double&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-char:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(char[]&nbsp;x)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="printf-java.lang.String-java.lang.Object...-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>printf</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;printf(java.lang.String&nbsp;format,
                                  java.lang.Object...&nbsp;args)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>printf</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="printf-java.util.Locale-java.lang.String-java.lang.Object...-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>printf</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;printf(java.util.Locale&nbsp;l,
                                  java.lang.String&nbsp;format,
                                  java.lang.Object...&nbsp;args)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>printf</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="format-java.lang.String-java.lang.Object...-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>format</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;format(java.lang.String&nbsp;format,
                                  java.lang.Object...&nbsp;args)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>format</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="format-java.util.Locale-java.lang.String-java.lang.Object...-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>format</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;format(java.util.Locale&nbsp;l,
                                  java.lang.String&nbsp;format,
                                  java.lang.Object...&nbsp;args)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>format</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="append-java.lang.CharSequence-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>append</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;append(java.lang.CharSequence&nbsp;csq)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>append</code>&nbsp;in interface&nbsp;<code>java.lang.Appendable</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>append</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="append-java.lang.CharSequence-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>append</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;append(java.lang.CharSequence&nbsp;csq,
                                  int&nbsp;start,
                                  int&nbsp;end)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>append</code>&nbsp;in interface&nbsp;<code>java.lang.Appendable</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>append</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="append-char-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>append</h4>
<pre>public&nbsp;java.io.PrintStream&nbsp;append(char&nbsp;c)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>append</code>&nbsp;in interface&nbsp;<code>java.lang.Appendable</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>append</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="println-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>println</h4>
<pre>public&nbsp;void&nbsp;println(java.lang.String&nbsp;output)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>println</code>&nbsp;in class&nbsp;<code>java.io.PrintStream</code></dd>
</dl>
</li>
</ul>
<a name="info--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>info</h4>
<pre>private&nbsp;java.lang.String&nbsp;info()</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Logger.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?debug/Logger.html" target="_top">Frames</a></li>
<li><a href="Logger.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
