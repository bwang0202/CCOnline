<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_kJtQcIcuEeO394xrVBhzLQ" name="ExtVisitor_Parsing_BNF">
    <eAnnotations xmi:id="_kedYcIcuEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_kef0sIcuEeO394xrVBhzLQ" source="codegen">
        <details xmi:id="_kegbwIcuEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing BNF/src"/>
        <details xmi:id="_KPBaoIcvEeO394xrVBhzLQ" key="AssociatedSourceCode" value="/ExtVisitor Parsing/src/parser/AGrammarSymbol.java;3143621372/1;/ExtVisitor Parsing/src/parser/AGramSym_ToString.java;4163858097/1;/ExtVisitor Parsing/src/parser/AGramSymVisitor.java;282698756/1;/ExtVisitor Parsing/src/parser/ATokVisitorFact.java;3953416976/1;/ExtVisitor Parsing BNF incomplete/src/parser/IGramSymVisitorCmd.java;161093719/1;/ExtVisitor Parsing BNF incomplete/src/parser/IGramSymVisitor.java;2310688546/1;/ExtVisitor Parsing BNF incomplete/src/parser/CombinationFact.java;1985682378/1;/ExtVisitor Parsing BNF incomplete/src/parser/IGrammarSymbol.java;3950238371/1;/ExtVisitor Parsing BNF incomplete/src/parser/ITokVisitorFact.java;1684720896/1;/ExtVisitor Parsing BNF incomplete/src/parser/MTSymbol.java;1173627250/1;/ExtVisitor Parsing/src/parser/MTSymbol.java;213668472/1;/ExtVisitor Parsing/src/parser/MTSymbolFact.java;1654560574/1;/ExtVisitor Parsing/src/parser/MultiCombinationFact.java;4291516204/1;/ExtVisitor Parsing/src/parser/MultiSequenceFact.java;3696184644/1;/ExtVisitor Parsing/src/parser/ProxyFact.java;1880875800/1;/ExtVisitor Parsing/src/parser/SequenceFact.java;644244302/1;/ExtVisitor Parsing/src/parser/SequenceSymbol.java;893001865/1;/ExtVisitor Parsing/src/parser/TerminalSymbol.java;3332937886/1;/ExtVisitor Parsing/src/parser/TerminalSymbolFact.java;3445048007/1;/ExtVisitor Parsing BNF/src/token/tokenizer/ITokenizer.java;545516061/1;/ExtVisitor Parsing BNF/src/token/tokenizer/ATokenizer.java;44350803/1;/ExtVisitor Parsing BNF/src/token/tokenizer/BNFTokenizer.java;3829509860/1;/ExtVisitor Parsing BNF/src/token/tokenizer/XMLTokenizer.java;785099576/1;/ExtVisitor Parsing BNF/src/token/tokenizer/Tokenizer1.java;1088649785/1;/ExtVisitor Parsing BNF/src/token/tokenizer/regex/ALexer.java;69745855/1;/ExtVisitor Parsing BNF/src/token/tokenizer/regex/ARule.java;3185875925/1;/ExtVisitor Parsing BNF/src/token/tokenizer/regex/ILexerFactory.java;3471046871/1;/ExtVisitor Parsing BNF/src/token/tokenizer/regex/LexerFactory.java;1752526537/1;/ExtVisitor Parsing BNF/src/token/Token.java;1268766215/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_KMlxsIcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_KMlxsYcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_KMlxsocvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_KMmYwIcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_KMmYwYcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_KMmYwocvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_KMm_0IcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_KMm_0YcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_KMnm4IcvEeO394xrVBhzLQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_KMoN8IcvEeO394xrVBhzLQ" name="extvisitor">
      <packagedElement xmi:type="uml:Interface" xmi:id="_KNB2kIcvEeO394xrVBhzLQ" name="IExtVisitor"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_LX0OsIcvEeO394xrVBhzLQ" name="AExtVisitor"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_Pv30EIcvEeO394xrVBhzLQ" name="IExtVisitorCmd"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_Pv9ToIcvEeO394xrVBhzLQ" name="IExtVisitorHost"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_KMrRQIcvEeO394xrVBhzLQ" name="parser">
      <packagedElement xmi:type="uml:Class" xmi:id="_KMu7oIcvEeO394xrVBhzLQ" clientDependency="_KM-zQIcvEeO394xrVBhzLQ" name="AGrammarSymbol" isAbstract="true">
        <eAnnotations xmi:id="_KMvisIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_KMvisYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_KMvisocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_KNNcxYcvEeO394xrVBhzLQ">
          <body>Abstract grammar token that has a name.&#xD;
Executes the case in the visitor corresponding to its name.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_KNKZcIcvEeO394xrVBhzLQ" name="_name" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_KM-zQIcvEeO394xrVBhzLQ" client="_KMu7oIcvEeO394xrVBhzLQ" supplier="_KM8-EIcvEeO394xrVBhzLQ" contract="_KM8-EIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KNMOoIcvEeO394xrVBhzLQ" name="AGrammarSymbol" specification="_KMxX4IcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_KNMOoYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KNMOoocvEeO394xrVBhzLQ" type="_KMu7oIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_name = name;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KNM1sIcvEeO394xrVBhzLQ" name="getName" specification="_KMx-8IcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_KNM1sYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _name;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KNNcwIcvEeO394xrVBhzLQ" name="execute" specification="_KNGvEIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_KNNcwYcvEeO394xrVBhzLQ" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_KNNcwocvEeO394xrVBhzLQ" name="inps" type="_KNFg8IcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KNNcw4cvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KNNcxIcvEeO394xrVBhzLQ" type="_KNABYIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return algo.caseAt(_name, this, inps);&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KMxX4IcvEeO394xrVBhzLQ" name="AGrammarSymbol" method="_KNMOoIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_KMxX4ocvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_KMxX44cvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_KMxX4YcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KMxX5IcvEeO394xrVBhzLQ" type="_KMu7oIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_KMx-8IcvEeO394xrVBhzLQ" name="getName" method="_KNM1sIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_KMx-8YcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KNGvEIcvEeO394xrVBhzLQ" name="execute" method="_KNNcwIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_KNGvEYcvEeO394xrVBhzLQ" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_KNGvEocvEeO394xrVBhzLQ" name="inps" type="_KNFg8IcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KNJLUIcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KNHWIYcvEeO394xrVBhzLQ" type="_KNABYIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KM8-EIcvEeO394xrVBhzLQ" name="IGrammarSymbol">
        <eAnnotations xmi:id="_PuvLoIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_PuvLoYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_PuvLoocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing BNF incomplete/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_PwFPcIcvEeO394xrVBhzLQ">
          <body>Represents a token (symbol) in the grammar, either terminal or non-terminal.</body>
        </ownedComment>
        <generalization xmi:id="_Pv96sIcvEeO394xrVBhzLQ" general="_Pv9ToIcvEeO394xrVBhzLQ"/>
        <ownedOperation xmi:id="_PuvysIcvEeO394xrVBhzLQ" name="getName" isAbstract="true">
          <ownedComment xmi:id="_PwFPcYcvEeO394xrVBhzLQ">
            <body>Getter fro the name of the grammar symbol&#xD;
	 * @return  The name</body>
          </ownedComment>
          <ownedParameter xmi:id="_PuwZwIcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_PvxGYIcvEeO394xrVBhzLQ" name="execute">
          <ownedParameter xmi:id="_PvxtcIcvEeO394xrVBhzLQ" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PvxtcYcvEeO394xrVBhzLQ" name="inps" type="_KNFg8IcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Pvy7kYcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Pvxtc4cvEeO394xrVBhzLQ" type="_KNABYIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Pvzio4cvEeO394xrVBhzLQ" name="typeExecute" isAbstract="true">
          <ownedParameter xmi:id="_PvzipIcvEeO394xrVBhzLQ" name="algo" type="_LX2D4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_Pv0JsIcvEeO394xrVBhzLQ" name="inps" type="_KNFg8IcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Pv1X0IcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Pv0JsocvEeO394xrVBhzLQ" type="_KNABYIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_KNABYIcvEeO394xrVBhzLQ" name="R"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_KNFg8IcvEeO394xrVBhzLQ" name="P"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_K4P90IcvEeO394xrVBhzLQ" name="AGramSym_ToString">
        <eAnnotations xmi:id="_K4Qk4IcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_K4Qk4YcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_K4RL8IcvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_K4lVAYcvEeO394xrVBhzLQ">
          <body>ToString visitor for AGramSymbol objects.&#xD;
@author swong&#xD;
@author mgricken&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_K4iRsIcvEeO394xrVBhzLQ" general="_K4hDkIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_K4i4wIcvEeO394xrVBhzLQ" name="Singleton" isLeaf="true" isStatic="true" type="_K4P90IcvEeO394xrVBhzLQ" isReadOnly="true" association="_K4l8EIcvEeO394xrVBhzLQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_K4jf0IcvEeO394xrVBhzLQ" value="new AGramSym_ToString()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K4jf0YcvEeO394xrVBhzLQ" name="toStringHelp" visibility="private" type="_K4hDkIcvEeO394xrVBhzLQ" association="_K4nKMYcvEeO394xrVBhzLQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_K4kG4YcvEeO394xrVBhzLQ" value="new AGramSymVisitor&lt;String, String>(&#xD;&#xA;&#x9;&#x9;&#x9;new IGramSymVisitorCmd&lt;String,String>() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public String apply(String index, IGrammarSymbol host, String... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// terminal case&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;TerminalSymbol h = (TerminalSymbol)host;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;|_ &quot;+h.getClass().getName()+&quot;: &quot;+h.toString();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}) { &#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;setCmd(&quot;Sequence&quot;, new IGramSymVisitorCmd&lt;String,String>() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public String apply(String index, IGrammarSymbol host, String... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// sequence case&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SequenceSymbol h = (SequenceSymbol)host;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;|_ &quot;+h.getClass().getName()+&quot;\n&quot;+&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;params[0]+h.getSymbol1().execute(toStringHelp,params[0]+&quot;|  &quot;)+&quot;\n&quot;+&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;params[0]+h.getSymbol2().execute(toStringHelp,params[0]+&quot;  &quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;&#x9;setCmd(&quot;MTSymbol&quot;, new IGramSymVisitorCmd&lt;String,String>() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public String apply(String index, IGrammarSymbol host, String... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// empty case&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;|_ &quot;+host.getClass().getName();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K4kt8YcvEeO394xrVBhzLQ" name="AGramSym_ToString" specification="_K4RzAIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_K4lVAIcvEeO394xrVBhzLQ" type="_K4P90IcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(new IGramSymVisitorCmd&lt;String,Void>() {&#xD;
			public String apply(String index, IGrammarSymbol host, Void... nu) {&#xD;
				// terminal case&#xD;
				TerminalSymbol h = (TerminalSymbol)host;&#xD;
				return h.getClass().getName()+&quot;: &quot;+h.toString();&#xD;
			}&#xD;
		}); &#xD;
&#xD;
		setCmd(&quot;MTSymbol&quot;, new IGramSymVisitorCmd&lt;String,Void>() {&#xD;
			public String apply(String index, IGrammarSymbol host, Void... nu) {&#xD;
				// empty case&#xD;
				return host.getClass().getName();&#xD;
			}&#xD;
		});&#xD;
		setCmd(&quot;Sequence&quot;, new IGramSymVisitorCmd&lt;String,Void>() {&#xD;
			public String apply(String index, IGrammarSymbol host, Void... nu) {&#xD;
				// sequence case&#xD;
				SequenceSymbol h = (SequenceSymbol)host;&#xD;
				return h.getClass().getName()+&quot;\n&quot;+&#xD;
				h.getSymbol1().execute(toStringHelp,&quot;|  &quot;)+&quot;\n&quot;+&#xD;
				h.getSymbol2().execute(toStringHelp,&quot;   &quot;);&#xD;
			}&#xD;
		});&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_K4RzAIcvEeO394xrVBhzLQ" name="AGramSym_ToString" visibility="private" method="_K4kt8YcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_K4SaEIcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_K4SaEYcvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_K4SaEocvEeO394xrVBhzLQ" type="_K4P90IcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_K4hDkIcvEeO394xrVBhzLQ" clientDependency="_LX3SAYcvEeO394xrVBhzLQ" name="AGramSymVisitor">
        <eAnnotations xmi:id="_LXjwAIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_LXjwAYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_LXkXEIcvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <generalization xmi:id="_LX8xkIcvEeO394xrVBhzLQ" general="_LX0OsIcvEeO394xrVBhzLQ"/>
        <interfaceRealization xmi:id="_LX3SAYcvEeO394xrVBhzLQ" client="_K4hDkIcvEeO394xrVBhzLQ" supplier="_LX2D4IcvEeO394xrVBhzLQ" contract="_LX2D4IcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LX9_sIcvEeO394xrVBhzLQ" name="AGramSymVisitor" specification="_LX6VUYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_LX9_sYcvEeO394xrVBhzLQ" name="cmd" type="_LX5HMIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_LX9_socvEeO394xrVBhzLQ" type="_K4hDkIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(cmd);&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_LX6VUYcvEeO394xrVBhzLQ" name="AGramSymVisitor" method="_LX9_sIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_LX68YYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_LX7jcIcvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_LX68YIcvEeO394xrVBhzLQ" name="cmd" type="_LX5HMIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_LX7jcYcvEeO394xrVBhzLQ" type="_K4hDkIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K4l8EIcvEeO394xrVBhzLQ" name="" memberEnd="_K4l8EYcvEeO394xrVBhzLQ _K4i4wIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_K4l8EYcvEeO394xrVBhzLQ" name="" type="_K4P90IcvEeO394xrVBhzLQ" association="_K4l8EIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K4nKMYcvEeO394xrVBhzLQ" name="" memberEnd="_K4nKMocvEeO394xrVBhzLQ _K4jf0YcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_K4nKMocvEeO394xrVBhzLQ" name="" type="_K4P90IcvEeO394xrVBhzLQ" association="_K4nKMYcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LX2D4IcvEeO394xrVBhzLQ" name="IGramSymVisitor">
        <eAnnotations xmi:id="_PuZ0cIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_PuZ0cYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_PuZ0cocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing BNF incomplete/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_PwEoY4cvEeO394xrVBhzLQ">
          <body>A visitor to an IGrammarSymbol&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;R>   The return type&#xD;
@param &lt;P>	The input parameter type</body>
        </ownedComment>
        <generalization xmi:id="_PvtcAIcvEeO394xrVBhzLQ" general="_KNB2kIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LX5HMIcvEeO394xrVBhzLQ" name="IGramSymVisitorCmd">
        <eAnnotations xmi:id="_PuVjAIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_PuWKEIcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_PuWKEYcvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing BNF incomplete/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_PwEoYocvEeO394xrVBhzLQ">
          <body>Command used in AGramSymVisitors&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;R>  The return type&#xD;
@param &lt;P>	The input paramter type</body>
        </ownedComment>
        <generalization xmi:id="_Pv5CMYcvEeO394xrVBhzLQ" general="_Pv30EIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MBEAAIcvEeO394xrVBhzLQ" clientDependency="_MBVs0YcvEeO394xrVBhzLQ" name="ATokVisitorFact" isAbstract="true">
        <eAnnotations xmi:id="_MBEnEIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_MBEnEYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_MBEnEocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_MBbzcocvEeO394xrVBhzLQ">
          <body>Abstract factory for a token visitor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_MBZXMIcvEeO394xrVBhzLQ" name="_name" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_MBZ-QYcvEeO394xrVBhzLQ" name="_tokenizer" visibility="private" type="_MBWT4IcvEeO394xrVBhzLQ" association="_MBdBkIcvEeO394xrVBhzLQ"/>
        <interfaceRealization xmi:id="_MBVs0YcvEeO394xrVBhzLQ" client="_MBEAAIcvEeO394xrVBhzLQ" supplier="_MBVFwIcvEeO394xrVBhzLQ" contract="_MBVFwIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBalUYcvEeO394xrVBhzLQ" name="ATokVisitorFact" specification="_MBW68YcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_MBalUocvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MBalU4cvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_MBalVIcvEeO394xrVBhzLQ" type="_MBEAAIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_name = name;&#xD;
 _tokenizer = tkz;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBbMYIcvEeO394xrVBhzLQ" name="getName" specification="_MBHDUIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_MBbMYYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _name;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBbMYocvEeO394xrVBhzLQ" name="nextToken" specification="_MBHqYYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_MBbMY4cvEeO394xrVBhzLQ" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _tokenizer.getNextToken();&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MBbzcIcvEeO394xrVBhzLQ" name="putBackToken" specification="_MBYwIYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_MBbzcYcvEeO394xrVBhzLQ" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
          <language>java</language>
          <body>// DXN: add putBack for the empty factory to put back token.&#xD;
 _tokenizer.putBack(t);&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_MBHDUIcvEeO394xrVBhzLQ" name="getName" method="_MBbMYIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_MBHqYIcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_MBHqYYcvEeO394xrVBhzLQ" name="nextToken" visibility="protected" isLeaf="true" method="_MBbMYocvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_MBbzdIcvEeO394xrVBhzLQ">
            <body>Return the next token.&#xD;
   *&#xD;
   * @return next token</body>
          </ownedComment>
          <ownedParameter xmi:id="_MBYwIIcvEeO394xrVBhzLQ" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MBW68YcvEeO394xrVBhzLQ" name="ATokVisitorFact" method="_MBalUYcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_MBXiAYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_MBXiAocvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_MBbzc4cvEeO394xrVBhzLQ">
            <body>Constructor for the abstract factory.&#xD;
   *&#xD;
   * @param tkz tokenizer to use</body>
          </ownedComment>
          <ownedParameter xmi:id="_MBW68ocvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_MBXiAIcvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_MBXiA4cvEeO394xrVBhzLQ" type="_MBEAAIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_MBYwIYcvEeO394xrVBhzLQ" name="putBackToken" visibility="protected" isLeaf="true" method="_MBbzcIcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_MBbzdYcvEeO394xrVBhzLQ">
            <body>Put the last token back into the tokenizer.</body>
          </ownedComment>
          <ownedParameter xmi:id="_MBYwIocvEeO394xrVBhzLQ" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_MBVFwIcvEeO394xrVBhzLQ" name="ITokVisitorFact">
        <eAnnotations xmi:id="_Pu15UIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_Pu15UYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_Pu15UocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing BNF incomplete/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_PwFPdIcvEeO394xrVBhzLQ">
          <body>Interface for an abstract factory for token visitors.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Pu2gYIcvEeO394xrVBhzLQ" name="name" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_Pu3ugIcvEeO394xrVBhzLQ" name="makeVisitor" isAbstract="true">
          <ownedParameter xmi:id="_Pv-hwIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Pv_I0IcvEeO394xrVBhzLQ" name="makeCombinedVisitor" isAbstract="true">
          <ownedParameter xmi:id="_Pv_I0YcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_Pv_v4YcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_MBdBkIcvEeO394xrVBhzLQ" name="" memberEnd="_MBdBkYcvEeO394xrVBhzLQ _MBZ-QYcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_MBdBkYcvEeO394xrVBhzLQ" name="" type="_MBEAAIcvEeO394xrVBhzLQ" association="_MBdBkIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_PucQsIcvEeO394xrVBhzLQ" name="CombinationFact">
        <eAnnotations xmi:id="_Puc3wIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_Puc3wYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_Puc3wocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing BNF incomplete/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_PwEoZIcvEeO394xrVBhzLQ">
          <body>Factory for a binary Combination grammar non-terminal objects.</body>
        </ownedComment>
        <generalization xmi:id="_Pvv4QIcvEeO394xrVBhzLQ" general="_MBEAAIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_PwAW8YcvEeO394xrVBhzLQ" name="_fact1" visibility="private" type="_MBVFwIcvEeO394xrVBhzLQ" association="_PwHEoIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_PwA-AYcvEeO394xrVBhzLQ" name="_fact2" visibility="private" type="_MBVFwIcvEeO394xrVBhzLQ" association="_PwHrsYcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_PwBlEYcvEeO394xrVBhzLQ" name="firstTime" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_PwBlEocvEeO394xrVBhzLQ" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_PwDaQIcvEeO394xrVBhzLQ" name="CombinationFact" specification="_PvuqIIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PwDaQYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_PwDaQocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PwDaQ4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PwDaRIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PwDaRYcvEeO394xrVBhzLQ" type="_PucQsIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(name, tkz);&#xD;
		_fact1 = fact1;&#xD;
		_fact2 = fact2;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_PwDaRocvEeO394xrVBhzLQ" name="makeVisitor" specification="_PugiIIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PwDaR4cvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _fact1.makeCombinedVisitor(_fact2.makeVisitor());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_PwDaSIcvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_Pv63YIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PwDaSYcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PwDaSocvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _fact1.makeCombinedVisitor(_fact2.makeCombinedVisitor(other));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_PwEBUIcvEeO394xrVBhzLQ" name="toString" specification="_PukzkIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PwEBUYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(firstTime) {&#xD;
			firstTime = false;&#xD;
			String result = &quot;CombinationFact(&quot;+getName()+&quot;: &quot;+_fact1+&quot;, &quot;+_fact2+&quot;)&quot;;&#xD;
			firstTime = true;&#xD;
			return result;&#xD;
		}&#xD;
		else {&#xD;
			return &quot;CombinationFact(&quot;+getName()+&quot;: &quot;+_fact1.getName()+&quot;, &quot;+_fact2.getName()+&quot;)&quot;;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_PugiIIcvEeO394xrVBhzLQ" name="makeVisitor" method="_PwDaRocvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_Pv6QUYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_PukzkIcvEeO394xrVBhzLQ" name="toString" method="_PwEBUIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PulaoIcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_PvuqIIcvEeO394xrVBhzLQ" name="CombinationFact" method="_PwDaQIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_PvvRMIcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_PvvRMYcvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_PwEoZYcvEeO394xrVBhzLQ">
            <body>Constructor for the F factory,&#xD;
	 *&#xD;
	 * @param tkz    tokenizer to use&#xD;
	 * @param f1Fact factory for F1 grammar non-terminals&#xD;
	 * @param f2Fact factory for F2 grammar non-terminals</body>
          </ownedComment>
          <ownedParameter xmi:id="_PvuqIYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_PvuqIocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PvuqI4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PvuqJIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_PvvRMocvEeO394xrVBhzLQ" type="_PucQsIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Pv63YIcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_PwDaSIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_Pv63YYcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_Pv7ecYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Pu7_8IcvEeO394xrVBhzLQ" name="MTSymbol">
        <eAnnotations xmi:id="_Pu7_8YcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_Pu7_8ocvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_Pu7_84cvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_WlZhcIcvEeO394xrVBhzLQ">
          <body>Grammar terminal -- empty</body>
        </ownedComment>
        <generalization xmi:id="_Pv2l8IcvEeO394xrVBhzLQ" general="_KMu7oIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_PwCMIYcvEeO394xrVBhzLQ" name="Singleton" isLeaf="true" isStatic="true" type="_Pu7_8IcvEeO394xrVBhzLQ" isReadOnly="true" association="_PwI50IcvEeO394xrVBhzLQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_PwCMIocvEeO394xrVBhzLQ" value="new MTSymbol()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_PwEBUocvEeO394xrVBhzLQ" name="MTSymbol" specification="_Pu9OEIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PwEBU4cvEeO394xrVBhzLQ" type="_Pu7_8IcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;MTSymbol&quot;);&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_PwEoYIcvEeO394xrVBhzLQ" name="toString" specification="_Pu91IYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_PwEoYYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;&quot;;&#xD;
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Pu9OEIcvEeO394xrVBhzLQ" name="MTSymbol" visibility="private" method="_PwEBUocvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_Pu9OEYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Pu9OEocvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Pu91IIcvEeO394xrVBhzLQ" type="_Pu7_8IcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Pu91IYcvEeO394xrVBhzLQ" name="toString" method="_PwEoYIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_Pu-cMIcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_PwHEoIcvEeO394xrVBhzLQ" name="" memberEnd="_PwHEoYcvEeO394xrVBhzLQ _PwAW8YcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_PwHEoYcvEeO394xrVBhzLQ" name="" type="_PucQsIcvEeO394xrVBhzLQ" association="_PwHEoIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_PwHrsYcvEeO394xrVBhzLQ" name="" memberEnd="_PwHrsocvEeO394xrVBhzLQ _PwA-AYcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_PwHrsocvEeO394xrVBhzLQ" name="" type="_PucQsIcvEeO394xrVBhzLQ" association="_PwHrsYcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_PwI50IcvEeO394xrVBhzLQ" name="" memberEnd="_PwI50YcvEeO394xrVBhzLQ _PwCMIYcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_PwI50YcvEeO394xrVBhzLQ" name="" type="_Pu7_8IcvEeO394xrVBhzLQ" association="_PwI50IcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WkF54IcvEeO394xrVBhzLQ" name="MTSymbolFact">
        <eAnnotations xmi:id="_WkGg8IcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_WkGg8YcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_WkGg8ocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_WlZhcYcvEeO394xrVBhzLQ">
          <body>Factory for Empty grammar terminals.</body>
        </ownedComment>
        <generalization xmi:id="_WlF_cYcvEeO394xrVBhzLQ" general="_MBEAAIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlVQAIcvEeO394xrVBhzLQ" name="MTSymbolFact" specification="_WlCVEIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlVQAYcvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlVQAocvEeO394xrVBhzLQ" type="_WkF54IcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(&quot;MTSymbol&quot;, tkz);&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlVQA4cvEeO394xrVBhzLQ" name="makeCmd" specification="_WkHIAIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlVQBIcvEeO394xrVBhzLQ" type="_WlSMsIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return new ITokVisitorCmd&lt;IGrammarSymbol, Object>() {&#xD;
   public IGrammarSymbol apply(String idx, Token host, Object... inps) {&#xD;
     putBackToken(host);&#xD;
     System.out.println(&quot;MTSymbolFact: Pushback&quot;);&#xD;
     return MTSymbol.Singleton;      }&#xD;
 };&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlV3EIcvEeO394xrVBhzLQ" name="makeVisitor" specification="_WkIWIYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlV3EYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return new ATokVisitor&lt;IGrammarSymbol, Object>(){&#xD;
   {&#xD;
     setDefaultCmd(makeCmd());&#xD;
   }&#xD;
 };&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlV3EocvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_WlDjMYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlV3E4cvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlV3FIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return new ATokVisitor&lt;IGrammarSymbol, Object>(other) {&#xD;
   {&#xD;
     setDefaultCmd(makeCmd());&#xD;
   }&#xD;
 };&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_WkHIAIcvEeO394xrVBhzLQ" name="makeCmd" visibility="private" method="_WlVQA4cvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlSzwYcvEeO394xrVBhzLQ" type="_WlSMsIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WkIWIYcvEeO394xrVBhzLQ" name="makeVisitor" method="_WlV3EIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlDjMIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WlCVEIcvEeO394xrVBhzLQ" name="MTSymbolFact" method="_WlVQAIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_WlC8IIcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WlC8IYcvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_WlCVEYcvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlC8IocvEeO394xrVBhzLQ" type="_WkF54IcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WlDjMYcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_WlV3EocvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlDjMocvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlExUYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WkLZcIcvEeO394xrVBhzLQ" clientDependency="_WlGmgIcvEeO394xrVBhzLQ" name="MultiCombinationFact">
        <eAnnotations xmi:id="_WkMAgIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_WkMAgYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_WkMAgocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_WlZhcocvEeO394xrVBhzLQ">
          <body>Utility factory that automatically combines together a series of &#xD;
CombinationFacts.  The result is to create a single factory that &#xD;
appears to create an arbitrarily large comination of ITokVisitorFacts.&#xD;
Note that each Combination symbol generated in the chain is given a &#xD;
unique, numbered name to aid in debugging.  The first (returned) one&#xD;
has the given name.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_WlTa0IcvEeO394xrVBhzLQ" name="_composed" visibility="private" type="_MBVFwIcvEeO394xrVBhzLQ" association="_Wlb9sIcvEeO394xrVBhzLQ"/>
        <interfaceRealization xmi:id="_WlGmgIcvEeO394xrVBhzLQ" client="_WkLZcIcvEeO394xrVBhzLQ" supplier="_MBVFwIcvEeO394xrVBhzLQ" contract="_MBVFwIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlV3FYcvEeO394xrVBhzLQ" name="MultiCombinationFact" specification="_WlHNkIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlV3FocvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlV3F4cvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlV3GIcvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlV3GYcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlV3GocvEeO394xrVBhzLQ" name="facts" type="_MBVFwIcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlV3G4cvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlV3HIcvEeO394xrVBhzLQ" type="_WkLZcIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if(0 == facts.length) {&#xD;
    _composed = makeComposed(name, tkz, fact1, fact2);&#xD;
  }&#xD;
  else {&#xD;
    ITokVisitorFact temp = facts[facts.length-1];&#xD;
    for(int i = facts.length-2; i >= 0 ; i--) {&#xD;
      temp = makeComposed(name +(i+2), tkz, facts[i], temp);&#xD;
    }&#xD;
    temp = makeComposed(name+1, tkz, fact2, temp);&#xD;
    _composed = makeComposed(name, tkz, fact1, temp);&#xD;
  }&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlWeIIcvEeO394xrVBhzLQ" name="getName" specification="_WkNOoIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlWeIYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.getName();&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlWeIocvEeO394xrVBhzLQ" name="makeComposed" specification="_WlJCwIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlWeI4cvEeO394xrVBhzLQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlWeJIcvEeO394xrVBhzLQ" name="t" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlWeJYcvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlWeJocvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlWeJ4cvEeO394xrVBhzLQ" type="_MBVFwIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return new CombinationFact(s, t, fact1, fact2);&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlXFMIcvEeO394xrVBhzLQ" name="makeVisitor" specification="_WkOcwIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlXFMYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.makeVisitor();&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlXFMocvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_WlKQ4YcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlXFM4cvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlXFNIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.makeCombinedVisitor(other);&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlXFNYcvEeO394xrVBhzLQ" name="toString" specification="_WkPq4IcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlXFNocvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.toString();&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_WkNOoIcvEeO394xrVBhzLQ" name="getName" method="_WlWeIIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WkNOoYcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WkOcwIcvEeO394xrVBhzLQ" name="makeVisitor" method="_WlXFMIcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_WlaIgYcvEeO394xrVBhzLQ">
            <body>Returns the visitor made from the combination of all the visitors from all the given factories.</body>
          </ownedComment>
          <ownedParameter xmi:id="_WlKQ4IcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WkPq4IcvEeO394xrVBhzLQ" name="toString" method="_WlXFNYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WkPq4YcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WlHNkIcvEeO394xrVBhzLQ" name="MultiCombinationFact" method="_WlV3FYcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_WlH0oIcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WlH0oYcvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_WlHNkYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlHNkocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlHNk4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlHNlIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlHNlYcvEeO394xrVBhzLQ" name="facts" type="_MBVFwIcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlIbsIcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlH0o4cvEeO394xrVBhzLQ" type="_WkLZcIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WlJCwIcvEeO394xrVBhzLQ" name="makeComposed" visibility="private" method="_WlWeIocvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_WlaIgIcvEeO394xrVBhzLQ">
            <body>Internal utility method to create a binary combination factory</body>
          </ownedComment>
          <ownedParameter xmi:id="_WlJCwYcvEeO394xrVBhzLQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlJCwocvEeO394xrVBhzLQ" name="t" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlJp0IcvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlJp0YcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlJp0ocvEeO394xrVBhzLQ" type="_MBVFwIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WlKQ4YcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_WlXFMocvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_WlaIgocvEeO394xrVBhzLQ">
            <body>Combines the visitor returned from makeVisitor with the given visitor</body>
          </ownedComment>
          <ownedParameter xmi:id="_WlKQ4ocvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlK38YcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_WkUjYIcvEeO394xrVBhzLQ" clientDependency="_WlMGEIcvEeO394xrVBhzLQ" name="MultiSequenceFact">
        <eAnnotations xmi:id="_WkUjYYcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_WkUjYocvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_WkUjY4cvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_WlaIg4cvEeO394xrVBhzLQ">
          <body>Utility factory that automatically chains together a series of &#xD;
SequenceFactories.  The result is to create a single factory that &#xD;
appears to create an arbitrarily long sequence of ITVFactories.&#xD;
Note that each SequenceSymbol generated in the chain is given a &#xD;
unique, numbered name to aid in debugging.  The first (returned) one&#xD;
has the given name.&#xD;
SequenceTokens only ever call the &quot;Sequence&quot; case of their visitors,&#xD;
so the individual tokens are indistinguishable to the visitors.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_WlUB4YcvEeO394xrVBhzLQ" name="_composed" visibility="private" type="_MBVFwIcvEeO394xrVBhzLQ" association="_WlckwYcvEeO394xrVBhzLQ"/>
        <interfaceRealization xmi:id="_WlMGEIcvEeO394xrVBhzLQ" client="_WkUjYIcvEeO394xrVBhzLQ" supplier="_MBVFwIcvEeO394xrVBhzLQ" contract="_MBVFwIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlXsQIcvEeO394xrVBhzLQ" name="MultiSequenceFact" specification="_WlMtIIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlXsQYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlXsQocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlXsQ4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlXsRIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlXsRYcvEeO394xrVBhzLQ" name="facts" type="_MBVFwIcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlXsRocvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlXsR4cvEeO394xrVBhzLQ" type="_WkUjYIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if(0 == facts.length) {&#xD;
    _composed = makeComposed(name, tkz, fact1, fact2);&#xD;
  }&#xD;
  else {&#xD;
    ITokVisitorFact temp = facts[facts.length-1];&#xD;
    for(int i = facts.length-2; i >= 0 ; i--) {&#xD;
      temp = makeComposed(name +(i+2), tkz, facts[i], temp);&#xD;
    }&#xD;
    temp = makeComposed(name+1, tkz, fact2, temp);&#xD;
    _composed = makeComposed(name, tkz, fact1, temp);&#xD;
  }&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlYTUIcvEeO394xrVBhzLQ" name="makeComposed" specification="_WlPJYIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlYTUYcvEeO394xrVBhzLQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlYTUocvEeO394xrVBhzLQ" name="t" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlYTU4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlYTVIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlYTVYcvEeO394xrVBhzLQ" type="_MBVFwIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return new SequenceFact(s, t, fact1, fact2);&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlYTVocvEeO394xrVBhzLQ" name="makeVisitor" specification="_WkWYkIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlYTV4cvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.makeVisitor();&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlY6YIcvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_WlQXgIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlY6YYcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlY6YocvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.makeCombinedVisitor(other);&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WlY6Y4cvEeO394xrVBhzLQ" name="getName" specification="_WkXmsIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlY6ZIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _composed.getName();&#xD;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_WkWYkIcvEeO394xrVBhzLQ" name="makeVisitor" method="_WlYTVocvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlPwcocvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WkXmsIcvEeO394xrVBhzLQ" name="getName" method="_WlY6Y4cvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WkXmsYcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WlMtIIcvEeO394xrVBhzLQ" name="MultiSequenceFact" method="_WlXsQIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_WlNUMYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_WlNUMocvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_WlMtIYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlMtIocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlMtI4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlMtJIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlNUMIcvEeO394xrVBhzLQ" name="facts" type="_MBVFwIcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlOiUYcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlOiUIcvEeO394xrVBhzLQ" type="_WkUjYIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WlPJYIcvEeO394xrVBhzLQ" name="makeComposed" visibility="private" method="_WlYTUIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlPJYYcvEeO394xrVBhzLQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WlPJYocvEeO394xrVBhzLQ" name="t" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlPJY4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlPwcIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlPwcYcvEeO394xrVBhzLQ" type="_MBVFwIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_WlQXgIcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_WlY6YIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_WlQXgYcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_WlQ-kYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Wlb9sIcvEeO394xrVBhzLQ" name="" memberEnd="_Wlb9sYcvEeO394xrVBhzLQ _WlTa0IcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_Wlb9sYcvEeO394xrVBhzLQ" name="" type="_WkLZcIcvEeO394xrVBhzLQ" association="_Wlb9sIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_WlckwYcvEeO394xrVBhzLQ" name="" memberEnd="_WlckwocvEeO394xrVBhzLQ _WlUB4YcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_WlckwocvEeO394xrVBhzLQ" name="" type="_WkUjYIcvEeO394xrVBhzLQ" association="_WlckwYcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iLk6YIcvEeO394xrVBhzLQ" clientDependency="_iL0yAIcvEeO394xrVBhzLQ" name="ProxyFact">
        <eAnnotations xmi:id="_iLlhcIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_iLlhcYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_iLlhcocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_iL5qgIcvEeO394xrVBhzLQ">
          <body>A proxy for a grammar token parsing factory used when the instance of &#xD;
a desired factory cannot be guaranteed available until execution time, &#xD;
such as when setting up a grammar with a loop in it.&#xD;
Using this proxy class eliminates the need for an extraneous settor &#xD;
method and a special constructor for specific factories involved in a &#xD;
grammar loop just so that the loop can be closed.&#xD;
Install this proxy in place of the proxied factory before the&#xD;
proxied factory has been instantiated and then call the settor&#xD;
below to set the reference to the proxied factory after the proxied factory&#xD;
has been instantiated.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iL31UIcvEeO394xrVBhzLQ" name="_fact" visibility="package" type="_MBVFwIcvEeO394xrVBhzLQ" association="_iL6RkIcvEeO394xrVBhzLQ"/>
        <interfaceRealization xmi:id="_iL0yAIcvEeO394xrVBhzLQ" client="_iLk6YIcvEeO394xrVBhzLQ" supplier="_MBVFwIcvEeO394xrVBhzLQ" contract="_MBVFwIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iL4cYYcvEeO394xrVBhzLQ" name="setFact" specification="_iL1ZEIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL4cYocvEeO394xrVBhzLQ" name="fact" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <language>java</language>
          <body>_fact = fact;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iL4cY4cvEeO394xrVBhzLQ" name="makeVisitor" specification="_iLmvkIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL4cZIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _fact.makeVisitor();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iL5DcIcvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_iL2AIYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL5DcYcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_iL5DcocvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _fact.makeCombinedVisitor(other);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iL5Dc4cvEeO394xrVBhzLQ" name="getName" specification="_iLokwIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL5DdIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _fact.getName();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iLmvkIcvEeO394xrVBhzLQ" name="makeVisitor" method="_iL4cY4cvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL2AIIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iLokwIcvEeO394xrVBhzLQ" name="getName" method="_iL5Dc4cvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iLpL0IcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iL1ZEIcvEeO394xrVBhzLQ" name="setFact" method="_iL4cYYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL1ZEYcvEeO394xrVBhzLQ" name="fact" type="_MBVFwIcvEeO394xrVBhzLQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iL2AIYcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_iL5DcIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_iL2AIocvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_iL2nMYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iL6RkIcvEeO394xrVBhzLQ" name="" memberEnd="_iL6RkYcvEeO394xrVBhzLQ _iL31UIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_iL6RkYcvEeO394xrVBhzLQ" name="" type="_iLk6YIcvEeO394xrVBhzLQ" association="_iL6RkIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_lZj5UIcvEeO394xrVBhzLQ" name="SequenceFact">
        <eAnnotations xmi:id="_lZkgYIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_lZlHcIcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_lZlHcYcvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_latI0IcvEeO394xrVBhzLQ">
          <body>A factory to create visitors to parse a binary sequence of grammar tokens.&#xD;
To easily create a sequence of two or more grammar tokens, use &#xD;
MultiSequenceFact rather than multiple SequenceFacts.</body>
        </ownedComment>
        <generalization xmi:id="_labcAIcvEeO394xrVBhzLQ" general="_MBEAAIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_laj-4IcvEeO394xrVBhzLQ" name="_fact1" visibility="private" type="_MBVFwIcvEeO394xrVBhzLQ" association="_lavlEIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_lalNAIcvEeO394xrVBhzLQ" name="_parse1" visibility="private" type="_Pv5pQYcvEeO394xrVBhzLQ" association="_lawMIYcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_lambIYcvEeO394xrVBhzLQ" name="_fact2" visibility="private" type="_MBVFwIcvEeO394xrVBhzLQ" association="_laxaQIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_lanCMYcvEeO394xrVBhzLQ" name="_parse2" visibility="private" type="_Pv5pQYcvEeO394xrVBhzLQ" association="_layBUIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_laoQUIcvEeO394xrVBhzLQ" name="_initializer" visibility="private" type="_laiwwIcvEeO394xrVBhzLQ" association="_layoYIcvEeO394xrVBhzLQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_lao3YYcvEeO394xrVBhzLQ" value="new ILambda&lt;Object, Object>() {&#xD;&#xA;    public Object apply(Object... nu) {&#xD;&#xA;      // change state to no-op&#xD;&#xA;      _initializer = new NoOpLambda&lt;Object>();&#xD;&#xA;      &#xD;&#xA;      // initialize&#xD;&#xA;      _parse1 = _fact1.makeVisitor();&#xD;&#xA;      _parse2 = _fact2.makeVisitor();&#xD;&#xA;      return null;&#xD;&#xA;    }&#xD;&#xA;  }"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_laqskIcvEeO394xrVBhzLQ" name="SequenceFact" specification="_laWjgIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_laqskYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_laqskocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laqsk4cvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laqslIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laqslYcvEeO394xrVBhzLQ" type="_lZj5UIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(name, tkz);&#xD;
 _fact1 = fact1;&#xD;
 _fact2 = fact2;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_laqslocvEeO394xrVBhzLQ" name="makeVisitor" specification="_lZpY4IcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_larToIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>initialize();&#xD;
 &#xD;
 return new ATokVisitor&lt;IGrammarSymbol, Object>(_parse1)&#xD;
 {&#xD;
   {&#xD;
     // Decorate every command that was copied from _parse1&#xD;
     for(Map.Entry&lt;String, IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token>> entry : getCmds()) {&#xD;
       final IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token> origCmd = entry.getValue();&#xD;
       entry.setValue(new ITokVisitorCmd&lt;IGrammarSymbol, Object>() {&#xD;
           public IGrammarSymbol apply(String idx, Token host, Object... inps) {&#xD;
             System.out.println(&quot;Sequence: &quot;+_name);&#xD;
             return new SequenceSymbol(_name, origCmd.apply(idx, host, inps),  nextToken().execute(_parse2, inps));&#xD;
           }&#xD;
         });&#xD;
     }&#xD;
     &#xD;
     final IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token> oldDefaultCmd = getDefaultCmd();&#xD;
     setDefaultCmd(new IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token>() {&#xD;
       public IGrammarSymbol apply(String idx, Token host, Object... inps) {&#xD;
         return new SequenceSymbol(_name,(IGrammarSymbol)oldDefaultCmd.apply(idx, host, inps), (IGrammarSymbol) nextToken().execute(_parse2, inps));&#xD;
       }&#xD;
     });&#xD;
   }&#xD;
 };&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_larToYcvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_laY_wIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_larToocvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_larTo4cvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>initialize();&#xD;
 &#xD;
 final ATokVisitor&lt;IGrammarSymbol, Object> v = makeVisitor();&#xD;
 // Copy all cmds from other to v&#xD;
 for(Map.Entry&lt;String, IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token>> otherEntry : other.getCmds()) {&#xD;
   v.setCmd(otherEntry.getKey(), otherEntry.getValue());&#xD;
 }&#xD;
//    other.map(new AExtVisitor.IMapLambda&lt;String, IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token>>() {&#xD;
//      public IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token> apply(String idx, final IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token> cmd) {&#xD;
//        v.setCmd(idx, cmd);   // copy command to v&#xD;
//        return cmd;  // put cmd back in other&#xD;
//      }&#xD;
//    });&#xD;
 v.setDefaultCmd(other.getDefaultCmd());&#xD;
 return v;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_larTpIcvEeO394xrVBhzLQ" name="initialize" specification="_lZtDQIcvEeO394xrVBhzLQ">
          <language>java</language>
          <body>_initializer.apply();&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_lZpY4IcvEeO394xrVBhzLQ" name="makeVisitor" method="_laqslocvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_latI0ocvEeO394xrVBhzLQ">
            <body>Make a token visitor to parse an sequence non-terminal.&#xD;
   *&#xD;
   * @return token visitor</body>
          </ownedComment>
          <ownedParameter xmi:id="_laYYsIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_lZtDQIcvEeO394xrVBhzLQ" name="initialize" visibility="private" method="_larTpIcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_latI1IcvEeO394xrVBhzLQ">
            <body>Make the visitor.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_laWjgIcvEeO394xrVBhzLQ" name="SequenceFact" method="_laqskIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_laXxoYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_laXxoocvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_latI0YcvEeO394xrVBhzLQ">
            <body>Constructor for the sequence factory,&#xD;
   *&#xD;
   * @param name The grammar token's name of this instance of a sequence.&#xD;
   * @param tkz    tokenizer to use&#xD;
   * @param fact1  factory for the first non-terminals&#xD;
   * @param fact2 factory for the second non-terminals</body>
          </ownedComment>
          <ownedParameter xmi:id="_laXKkIcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_laXKkYcvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laXKkocvEeO394xrVBhzLQ" name="fact1" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laXxoIcvEeO394xrVBhzLQ" name="fact2" type="_MBVFwIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laXxo4cvEeO394xrVBhzLQ" type="_lZj5UIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_laY_wIcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_larToYcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_latI04cvEeO394xrVBhzLQ">
            <body>Make a token visitor that will process the combination of this sequence&#xD;
   * or the other given symbol &#xD;
   *&#xD;
   * @param other The visitor for the other symbol in the combination &#xD;
   * @return A token visitor</body>
          </ownedComment>
          <ownedParameter xmi:id="_laY_wYcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_laZm0YcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_lZzw8IcvEeO394xrVBhzLQ" name="SequenceSymbol">
        <eAnnotations xmi:id="_lZ0YAIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_lZ0YAYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_lZ0YAocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_latI1YcvEeO394xrVBhzLQ">
          <body>Grammar non-terminal -- SeqeuenceToken ::= Token1 Token2&#xD;
Binary sequence</body>
        </ownedComment>
        <generalization xmi:id="_lahioYcvEeO394xrVBhzLQ" general="_KMu7oIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_lapecIcvEeO394xrVBhzLQ" name="_symbol1" visibility="private" type="_KM8-EIcvEeO394xrVBhzLQ" association="_lazPcIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_laqFgIcvEeO394xrVBhzLQ" name="_symbol2" visibility="private" type="_KM8-EIcvEeO394xrVBhzLQ" association="_laz2gIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_lar6sIcvEeO394xrVBhzLQ" name="SequenceSymbol" specification="_ladRMIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_lar6sYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_lar6socvEeO394xrVBhzLQ" name="symbol1" type="_KM8-EIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_lar6s4cvEeO394xrVBhzLQ" name="symbol2" type="_KM8-EIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_lar6tIcvEeO394xrVBhzLQ" type="_lZzw8IcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(name);  &#xD;
 _symbol1 = symbol1;&#xD;
 _symbol2 = symbol2;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_lar6tYcvEeO394xrVBhzLQ" name="toString" specification="_lZ2NMIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_lar6tocvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _symbol1.toString() + _symbol2.toString();&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_lar6t4cvEeO394xrVBhzLQ" name="getSymbol1" specification="_lZ20QYcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_lar6uIcvEeO394xrVBhzLQ" type="_KM8-EIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _symbol1;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_lashwIcvEeO394xrVBhzLQ" name="getSymbol2" specification="_lZ3bUIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_lashwYcvEeO394xrVBhzLQ" type="_KM8-EIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return _symbol2;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_lashwocvEeO394xrVBhzLQ" name="execute" specification="_lafGYIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_lashw4cvEeO394xrVBhzLQ" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_lashxIcvEeO394xrVBhzLQ" name="inps" type="_KNFg8IcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lashxYcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_lashxocvEeO394xrVBhzLQ" type="_KNABYIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>return algo.caseAt(&quot;Sequence&quot;, this, inps);&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_lZ2NMIcvEeO394xrVBhzLQ" name="toString" method="_lar6tYcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_latI14cvEeO394xrVBhzLQ">
            <body>Return a string representation consisting of a String representation of &#xD;
   * each of the internal components of E.&#xD;
   *&#xD;
   * @return string representation</body>
          </ownedComment>
          <ownedParameter xmi:id="_lZ20QIcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_lZ20QYcvEeO394xrVBhzLQ" name="getSymbol1" method="_lar6t4cvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_latv4IcvEeO394xrVBhzLQ">
            <body>Gettor for the first token in the sequence.</body>
          </ownedComment>
          <ownedParameter xmi:id="_laefUIcvEeO394xrVBhzLQ" type="_KM8-EIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_lZ3bUIcvEeO394xrVBhzLQ" name="getSymbol2" method="_lashwIcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_latv4YcvEeO394xrVBhzLQ">
            <body>Gettor for the second token in the sequence.</body>
          </ownedComment>
          <ownedParameter xmi:id="_laefUYcvEeO394xrVBhzLQ" type="_KM8-EIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ladRMIcvEeO394xrVBhzLQ" name="SequenceSymbol" method="_lar6sIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_lad4QYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_lad4QocvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_latI1ocvEeO394xrVBhzLQ">
            <body>Constructor for the sequence token grammar non-terminal.&#xD;
   *&#xD;
   * @param token1 IGrammarSymbol object&#xD;
   * @param token2 IGrammarSymbol object</body>
          </ownedComment>
          <ownedParameter xmi:id="_ladRMYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ladRMocvEeO394xrVBhzLQ" name="symbol1" type="_KM8-EIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_lad4QIcvEeO394xrVBhzLQ" name="symbol2" type="_KM8-EIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_lad4Q4cvEeO394xrVBhzLQ" type="_lZzw8IcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_lafGYIcvEeO394xrVBhzLQ" name="execute" method="_lashwocvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_lafGYYcvEeO394xrVBhzLQ" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_lafGYocvEeO394xrVBhzLQ" name="inps" type="_KNFg8IcvEeO394xrVBhzLQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lagUgYcvEeO394xrVBhzLQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_laftcIcvEeO394xrVBhzLQ" type="_KNABYIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_lavlEIcvEeO394xrVBhzLQ" name="" memberEnd="_lavlEYcvEeO394xrVBhzLQ _laj-4IcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_lavlEYcvEeO394xrVBhzLQ" name="" type="_lZj5UIcvEeO394xrVBhzLQ" association="_lavlEIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_lawMIYcvEeO394xrVBhzLQ" name="" memberEnd="_lawMIocvEeO394xrVBhzLQ _lalNAIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_lawMIocvEeO394xrVBhzLQ" name="" type="_lZj5UIcvEeO394xrVBhzLQ" association="_lawMIYcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_laxaQIcvEeO394xrVBhzLQ" name="" memberEnd="_laxaQYcvEeO394xrVBhzLQ _lambIYcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_laxaQYcvEeO394xrVBhzLQ" name="" type="_lZj5UIcvEeO394xrVBhzLQ" association="_laxaQIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_layBUIcvEeO394xrVBhzLQ" name="" memberEnd="_layBUYcvEeO394xrVBhzLQ _lanCMYcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_layBUYcvEeO394xrVBhzLQ" name="" type="_lZj5UIcvEeO394xrVBhzLQ" association="_layBUIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_layoYIcvEeO394xrVBhzLQ" name="" memberEnd="_layoYYcvEeO394xrVBhzLQ _laoQUIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_layoYYcvEeO394xrVBhzLQ" name="" type="_lZj5UIcvEeO394xrVBhzLQ" association="_layoYIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_lazPcIcvEeO394xrVBhzLQ" name="" memberEnd="_lazPcYcvEeO394xrVBhzLQ _lapecIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_lazPcYcvEeO394xrVBhzLQ" name="" type="_lZzw8IcvEeO394xrVBhzLQ" association="_lazPcIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_laz2gIcvEeO394xrVBhzLQ" name="" memberEnd="_laz2gYcvEeO394xrVBhzLQ _laqFgIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_laz2gYcvEeO394xrVBhzLQ" name="" type="_lZzw8IcvEeO394xrVBhzLQ" association="_laz2gIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_nWrtUIcvEeO394xrVBhzLQ" name="TerminalSymbol">
        <eAnnotations xmi:id="_nWs7cIcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_nWs7cYcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_nWs7cocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_nXTYZocvEeO394xrVBhzLQ">
          <body>Grammar non-terminal -- Word ::= id</body>
        </ownedComment>
        <generalization xmi:id="_nXLck4cvEeO394xrVBhzLQ" general="_KMu7oIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_nXQVEIcvEeO394xrVBhzLQ" name="_token" visibility="private" type="_MBYJEIcvEeO394xrVBhzLQ" association="_nXUmgIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXSKQIcvEeO394xrVBhzLQ" name="TerminalSymbol" specification="_nXK1gIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXSKQYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_nXSKQocvEeO394xrVBhzLQ" name="token" type="_MBYJEIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_nXSKQ4cvEeO394xrVBhzLQ" type="_nWrtUIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(name);  &#xD;
   _token = token;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXSKRIcvEeO394xrVBhzLQ" name="toString" specification="_nWuJkIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXSKRYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _token.toString();&#xD;
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_nWuJkIcvEeO394xrVBhzLQ" name="toString" method="_nXSKRIcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_nXT_cIcvEeO394xrVBhzLQ">
            <body>Return a string representation.&#xD;
     *&#xD;
     * @return string representation</body>
          </ownedComment>
          <ownedParameter xmi:id="_nWuJkYcvEeO394xrVBhzLQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_nXK1gIcvEeO394xrVBhzLQ" name="TerminalSymbol" method="_nXSKQIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_nXLckIcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_nXLckYcvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_nXTYZ4cvEeO394xrVBhzLQ">
            <body>Constructor for the Word grammar non-terminal.&#xD;
     *&#xD;
     * @param num number token</body>
          </ownedComment>
          <ownedParameter xmi:id="_nXK1gYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_nXK1gocvEeO394xrVBhzLQ" name="token" type="_MBYJEIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_nXLckocvEeO394xrVBhzLQ" type="_nWrtUIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_nWv-wIcvEeO394xrVBhzLQ" name="TerminalSymbolFact">
        <eAnnotations xmi:id="_nWwl0IcvEeO394xrVBhzLQ" source="http://ns.yatta.de/umllab">
          <contents xmi:type="ecore:EAnnotation" xmi:id="_nWwl0YcvEeO394xrVBhzLQ" source="codegen">
            <details xmi:id="_nWwl0ocvEeO394xrVBhzLQ" key="codegenDirectory" value="/ExtVisitor Parsing/src"/>
          </contents>
        </eAnnotations>
        <ownedComment xmi:id="_nXT_cYcvEeO394xrVBhzLQ">
          <body>Factory for a simple non-terminal that references a single token.</body>
        </ownedComment>
        <generalization xmi:id="_nXPuAYcvEeO394xrVBhzLQ" general="_MBEAAIcvEeO394xrVBhzLQ"/>
        <ownedAttribute xmi:id="_nXQ8IYcvEeO394xrVBhzLQ" name="_initializer" visibility="private" type="_laiwwIcvEeO394xrVBhzLQ" association="_nXV0oIcvEeO394xrVBhzLQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_nXRjMYcvEeO394xrVBhzLQ" value="new ILambda&lt;Object, Object>() {&#xD;&#xA;    public Object apply(Object... nu) {&#xD;&#xA;      // change state to no-op&#xD;&#xA;      _initializer = new NoOpLambda&lt;Object>();&#xD;&#xA;      &#xD;&#xA;      // nothing to initialize&#xD;&#xA;      return null;&#xD;&#xA;    }&#xD;&#xA;  }"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXSxUIcvEeO394xrVBhzLQ" name="TerminalSymbolFact" specification="_nXMDoIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXSxUYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_nXSxUocvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_nXSxU4cvEeO394xrVBhzLQ" type="_nWv-wIcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>super(name, tkz);&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXSxVIcvEeO394xrVBhzLQ" name="addCmdTo" specification="_nXNRwIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXSxVYcvEeO394xrVBhzLQ" name="target" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <language>java</language>
          <body>target.setCmd(_name, new IExtVisitorCmd&lt;IGrammarSymbol, String, Object, Token>() {&#xD;
   public IGrammarSymbol apply(String idx, Token host, Object... inp) {&#xD;
     System.out.println(&quot;TerminalSymbolFact(&quot;+_name+&quot;)&quot;);&#xD;
     return new TerminalSymbol(_name,(Token)host);&#xD;
   }&#xD;
 });&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXTYYIcvEeO394xrVBhzLQ" name="makeVisitor" specification="_nWxM4IcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXTYYYcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>initialize();&#xD;
 &#xD;
 return new ATokVisitor&lt;IGrammarSymbol, Object>() {&#xD;
   {&#xD;
     addCmdTo(this);&#xD;
   }&#xD;
 };&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXTYYocvEeO394xrVBhzLQ" name="makeCombinedVisitor" specification="_nXOf4IcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXTYY4cvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_nXTYZIcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>initialize();&#xD;
 &#xD;
 return new ATokVisitor&lt;IGrammarSymbol, Object>(other) {&#xD;
   {&#xD;
     addCmdTo(this);&#xD;
   }&#xD;
 };&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nXTYZYcvEeO394xrVBhzLQ" name="initialize" specification="_nWzCEIcvEeO394xrVBhzLQ">
          <language>java</language>
          <body>_initializer.apply((Object) null);&#xD;
 &#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_nWxM4IcvEeO394xrVBhzLQ" name="makeVisitor" method="_nXTYYIcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_nXT_c4cvEeO394xrVBhzLQ">
            <body>Make a token visitor to parse an E1a non-terminal.&#xD;
   *&#xD;
   * @return token visitor</body>
          </ownedComment>
          <ownedParameter xmi:id="_nXN40YcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_nWzCEIcvEeO394xrVBhzLQ" name="initialize" visibility="private" method="_nXTYZYcvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_nXT_dYcvEeO394xrVBhzLQ">
            <body>Make the visitor.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_nXMDoIcvEeO394xrVBhzLQ" name="TerminalSymbolFact" method="_nXSxUIcvEeO394xrVBhzLQ">
          <eAnnotations xmi:id="_nXMqsYcvEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_nXMqsocvEeO394xrVBhzLQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_nXT_cocvEeO394xrVBhzLQ">
            <body>Constructor for the F1 factory.&#xD;
   *&#xD;
   * @param tkz tokenizer to use&#xD;
   * @param name the name that references the single token</body>
          </ownedComment>
          <ownedParameter xmi:id="_nXMDoYcvEeO394xrVBhzLQ" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_nXMqsIcvEeO394xrVBhzLQ" name="tkz" type="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_nXMqs4cvEeO394xrVBhzLQ" type="_nWv-wIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_nXNRwIcvEeO394xrVBhzLQ" name="addCmdTo" visibility="private" method="_nXSxVIcvEeO394xrVBhzLQ">
          <ownedParameter xmi:id="_nXNRwYcvEeO394xrVBhzLQ" name="target" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_nXOf4IcvEeO394xrVBhzLQ" name="makeCombinedVisitor" method="_nXTYYocvEeO394xrVBhzLQ">
          <ownedComment xmi:id="_nXT_dIcvEeO394xrVBhzLQ">
            <body>Make a token visitor that will process the combination of this &#xD;
   * or the other given symbol &#xD;
   *&#xD;
   * @param other The visitor for the other symbol in the combination &#xD;
   * @return A token visitor</body>
          </ownedComment>
          <ownedParameter xmi:id="_nXOf4YcvEeO394xrVBhzLQ" name="other" type="_Pv5pQYcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_nXPG8YcvEeO394xrVBhzLQ" type="_Pv5pQYcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_nXUmgIcvEeO394xrVBhzLQ" name="" memberEnd="_nXUmgYcvEeO394xrVBhzLQ _nXQVEIcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_nXUmgYcvEeO394xrVBhzLQ" name="" type="_nWrtUIcvEeO394xrVBhzLQ" association="_nXUmgIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_nXV0oIcvEeO394xrVBhzLQ" name="" memberEnd="_nXV0oYcvEeO394xrVBhzLQ _nXQ8IYcvEeO394xrVBhzLQ">
        <ownedEnd xmi:id="_nXV0oYcvEeO394xrVBhzLQ" name="" type="_nWv-wIcvEeO394xrVBhzLQ" association="_nXV0oIcvEeO394xrVBhzLQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_MA95YIcvEeO394xrVBhzLQ" name="token">
      <packagedElement xmi:type="uml:Package" xmi:id="_MA-gcIcvEeO394xrVBhzLQ" name="tokenizer">
        <packagedElement xmi:type="uml:Interface" xmi:id="_MBWT4IcvEeO394xrVBhzLQ" clientDependency="_BUTx4IyfEeOA_6J9sGme9g" name="ITokenizer" isAbstract="true">
          <ownedComment xmi:id="_pjH40IyXEeOA_6J9sGme9g">
            <body>Extract and return an appropriate Token from some given source.</body>
          </ownedComment>
          <ownedOperation xmi:id="_piiC8IyXEeOA_6J9sGme9g" name="getNextToken" isAbstract="true">
            <ownedComment xmi:id="_pjIf4IyXEeOA_6J9sGme9g">
              <body>Return the next token.</body>
            </ownedComment>
            <ownedParameter xmi:id="_pjEOcIyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_pjFckIyXEeOA_6J9sGme9g" name="putBack" isAbstract="true">
            <ownedComment xmi:id="_pjIf4YyXEeOA_6J9sGme9g">
              <body>Put the previously consumed token back into the token stream.  An arbitrary number of tokens can be put back into the stream. &#xD;
     * @param t the token to put back</body>
            </ownedComment>
            <ownedParameter xmi:id="_pjGDoIyXEeOA_6J9sGme9g" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_q8KIUIyXEeOA_6J9sGme9g" clientDependency="_rCR-cIyXEeOA_6J9sGme9g _nyDHUIyYEeOA_6J9sGme9g" name="ATokenizer" isAbstract="true">
          <ownedComment xmi:id="_rEdvwIyXEeOA_6J9sGme9g">
            <body>Use the StreamTokenizer provided by in java.io to scan an input stream and extract an appropriate Token.&#xD;
Is customizable through the setSymbols() method which takes an Iterable&lt;String>'s containing the keywords &#xD;
to recognize as special tokens.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_rDs6wIyXEeOA_6J9sGme9g" name="_st" visibility="protected" type="_rBRR0IyXEeOA_6J9sGme9g" association="_rEqkEIyXEeOA_6J9sGme9g"/>
          <ownedAttribute xmi:id="_rDvXAIyXEeOA_6J9sGme9g" name="_reader" visibility="private" type="_rBO1kIyXEeOA_6J9sGme9g" association="_rEtAUIyXEeOA_6J9sGme9g"/>
          <ownedAttribute xmi:id="_rDxzQIyXEeOA_6J9sGme9g" name="tokFac" visibility="protected" type="_rBeGIIyXEeOA_6J9sGme9g" association="_rEvckIyXEeOA_6J9sGme9g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rDyaUIyXEeOA_6J9sGme9g" value="TokenFactory.Singleton"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rD02kIyXEeOA_6J9sGme9g" name="tokenStack" visibility="private" type="_rBbp4IyXEeOA_6J9sGme9g" association="_rEx40IyXEeOA_6J9sGme9g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rD354IyXEeOA_6J9sGme9g" value="new Stack&lt;Token>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rD5vEIyXEeOA_6J9sGme9g" name="symbols" visibility="private" type="_rBmB8IyXEeOA_6J9sGme9g" isOrdered="true" association="_rE0VEIyXEeOA_6J9sGme9g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rD6WIIyXEeOA_6J9sGme9g" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rD69MIyXEeOA_6J9sGme9g" value="new ArrayList&lt;WordTree>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rD9ZcIyXEeOA_6J9sGme9g" name="tTypeValueStack" visibility="private" type="_rBbp4IyXEeOA_6J9sGme9g" association="_rE2xUYyXEeOA_6J9sGme9g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rD_OoYyXEeOA_6J9sGme9g" value="new Stack&lt;ITTypeValue>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_rEBD0IyXEeOA_6J9sGme9g" name="wtAlgo" visibility="private" type="_rBjlsIyXEeOA_6J9sGme9g" association="_rE5NkYyXEeOA_6J9sGme9g">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_rEEHIIyXEeOA_6J9sGme9g" value="new IWordTreeVisitor&lt;Token, Void>() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * cmds[0] => construct the terminal word using the given string and return the token made from it.&#xD;&#xA;&#x9;&#x9; * cmds[1] => Perform any additional token pushing and return the token made from the closest (largest) terminal word. &#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;IWordTreeVisitor&lt;Token, ILambda&lt;Token, String>> helper = new IWordTreeVisitor&lt;Token, ILambda&lt;Token, String>>() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public Token leafTerminalCase(WordTree host, @SuppressWarnings(&quot;unchecked&quot;) ILambda&lt;Token, String>... cmds) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return cmds[0].apply(&quot;&quot;+host.getValue());  // make token from this terminal word &#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public Token leafNonTerminalCase(WordTree host, @SuppressWarnings(&quot;unchecked&quot;) ILambda&lt;Token, String>... cmds) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// ERROR!  Should never get here b/c after reading keywords into wordtrees, all leaf nodes should be terminal. &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;ATokenizer.wtAlgo.helper.leafNonTerminalCase: Leaf node of keyword tree should never be non-terminal!&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@SuppressWarnings(&quot;unchecked&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public Token nonLeafTerminalCase(final WordTree host, final ILambda&lt;Token, String>... cmds) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// check the children symbols&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;final ITTypeValue nextTTV = popTTypeValue();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for(WordTree nextWT: host.getRest()){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(nextTTV.getTTtype() == nextWT.getValue()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.wtAlgo.helper.nonLeafTerminalCase: matching ttype found in symbols: &quot;+nextTTV.getTTtype()+&quot; == &quot;+nextWT.getValue());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return nextWT.execute(this, new ILambda&lt;Token, String>(){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... wordAccs) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return cmds[0].apply(host.getValue()+wordAccs[0]);   // accumulate terminal word and return resultant token&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}, new ILambda&lt;Token, String>() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV); // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return cmds[0].apply(&quot;&quot;+host.getValue());   //  make token from this terminal word &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV);  // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return cmds[0].apply(&quot;&quot;+host.getValue());  //  make token from this terminal word &#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@SuppressWarnings(&quot;unchecked&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public Token nonLeafNonTerminalCase(final WordTree host, final ILambda&lt;Token, String>... cmds) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// check the children symbols&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;final ITTypeValue nextTTV = popTTypeValue();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for(WordTree nextWT: host.getRest()){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(nextTTV.getTTtype() == nextWT.getValue()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.wtAlgo.helper.nonLeafNonTerminalCase: matching ttype found in symbols: &quot;+nextTTV.getTTtype()+&quot; == &quot;+nextWT.getValue());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return nextWT.execute(this, new ILambda&lt;Token, String>(){&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return cmds[0].apply(host.getValue()+params[0]); // accumulate terminal word and return resultant token&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}, new ILambda&lt;Token, String>() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV);  // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return cmds[1].apply();  // push back any previous tokens and return the closest terminal word token&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV); // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return cmds[1].apply(); // push back any previous tokens and return the closest terminal word token&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;};&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Token leafTerminalCase(WordTree host, Void... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;// make the token&#xD;&#xA;&#x9;&#x9;&#x9;String name = &quot;&quot;+host.getValue();&#xD;&#xA;&#x9;&#x9;&#x9;//HACK -- only works if &quot;\n&quot; is in the symbol list but not combined with any other symbols.&#xD;&#xA;&#x9;&#x9;&#x9;if(name.equals(&quot;\n&quot;)) name= &quot;lf&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;Token newToken =  tokFac.makeToken(name, &quot;&quot;+host.getValue());&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.wtAlgo.leafTerminalCase(): making token: &quot;+ newToken);&#xD;&#xA;&#x9;&#x9;&#x9;return newToken;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Token leafNonTerminalCase(WordTree host, Void...nu) {&#xD;&#xA;&#x9;&#x9;&#x9;// ERROR!  Should never get here b/c after reading keywords into wordtrees, all leaf nodes should be terminal. &#xD;&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;ATokenizer.wtAlgo.leafNonTerminalCase: Leaf node of keyword tree should never be non-terminal!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@SuppressWarnings(&quot;unchecked&quot;)&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Token nonLeafTerminalCase(final WordTree host, Void... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;// check the children symbols&#xD;&#xA;&#x9;&#x9;&#x9;final ITTypeValue nextTTV = popTTypeValue();&#xD;&#xA;&#x9;&#x9;&#x9;for(WordTree nextWT: host.getRest()){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if(nextTTV.getTTtype() == nextWT.getValue()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.makeNextToken(): matching ttype found in symbols: &quot;+nextTTV.getTTtype()+&quot; == &quot;+nextWT.getValue());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return nextWT.execute(helper, new ILambda&lt;Token, String>(){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String name = host.getValue()+params[0];  // accumulate the terminal word&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return  tokFac.makeToken(name, name);   // make the token from the accumulated terminal word&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}, new ILambda&lt;Token, String>() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV);    // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String name = &quot;&quot;+host.getValue();   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return  tokFac.makeToken(name, name);   // make the token from this terminal word&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV);  // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;String name = &quot;&quot;+host.getValue();&#xD;&#xA;&#x9;&#x9;&#x9;Token newToken =  tokFac.makeToken(name, name);   //make the token from this terminal word&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.w.Algo.nonLeafTerminalCase(): making token: &quot;+ newToken);&#xD;&#xA;&#x9;&#x9;&#x9;return newToken;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@SuppressWarnings(&quot;unchecked&quot;)&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Token nonLeafNonTerminalCase(final WordTree host, Void... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;// check the children symbols&#xD;&#xA;&#x9;&#x9;&#x9;final ITTypeValue nextTTV = popTTypeValue();&#xD;&#xA;&#x9;&#x9;&#x9;for(WordTree nextWT: host.getRest()){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if(nextTTV.getTTtype() == nextWT.getValue()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.makeNextToken(): matching ttype found in symbols: &quot;+nextTTV.getTTtype()+&quot; == &quot;+nextWT.getValue());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return nextWT.execute(helper, new ILambda&lt;Token, String>(){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String name = host.getValue()+params[0];  // accumulate the terminal word&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return  tokFac.makeToken(name, name);   // make the token from the accumulated terminal word&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}, new ILambda&lt;Token, String>() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;public Token apply(String... nu) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// NOT RIGHT!!  Need to find next terminal token.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// want to keep nextTTV and pop the next token and run it against the whole symbols list.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// if not in symbols or if a token gets made, then need to take accumulated TTypeValues and make an Id token.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// this might need to be moved outside of this algo.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV);    // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String name = &quot;&quot;+host.getValue();   &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return  tokFac.makeToken(&quot;Id&quot;, name);   // make the token from this terminal word&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;pushTTypeValue(nextTTV);  // push the next token back&#xD;&#xA;&#x9;&#x9;&#x9;String name = &quot;&quot;+host.getValue();&#xD;&#xA;&#x9;&#x9;&#x9;Token newToken =  tokFac.makeToken(&quot;Id&quot;, name);   //make the token from this terminal word&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;ATokenizer.wtAlgo.nonLeafNonTerminalCase(): making token: &quot;+ newToken);&#xD;&#xA;&#x9;&#x9;&#x9;return newToken;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_rCR-cIyXEeOA_6J9sGme9g" client="_q8KIUIyXEeOA_6J9sGme9g" supplier="_MBWT4IcvEeO394xrVBhzLQ" contract="_MBWT4IcvEeO394xrVBhzLQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rEPGQIyXEeOA_6J9sGme9g" name="ATokenizer" specification="_rDGd0IyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rEPtUIyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_rEPtUYyXEeOA_6J9sGme9g" type="_q8KIUIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>_reader = reader;&#xD;
&#xD;
		_st = new StreamTokenizer(_reader);&#xD;
&#xD;
		//    _st.resetSyntax();&#xD;
		//    _st.eolIsSignificant(false);&#xD;
		_st.eolIsSignificant(false);&#xD;
		_st.slashSlashComments(false);&#xD;
		_st.slashStarComments(false);&#xD;
		_st.quoteChar('&quot;');&#xD;
		_st.wordChars('a', 'z');&#xD;
		_st.wordChars('A', 'Z');&#xD;
		_st.wordChars('0', '9');&#xD;
		_st.wordChars('_','_');&#xD;
		_st.whitespaceChars(0,32);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rEQUYIyXEeOA_6J9sGme9g" name="ATokenizer" specification="_q8VHcIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rEQUYYyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rEQUYoyXEeOA_6J9sGme9g" type="_q8KIUIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>this(new StringReader(text));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rERigIyXEeOA_6J9sGme9g" name="closeReader" specification="_q8Yx0IyXEeOA_6J9sGme9g">
            <language>java</language>
            <body>try {&#xD;
			_reader.close();&#xD;
		} catch (IOException e) {&#xD;
			System.err.println(&quot;ATokenizer.closeReader():  Exception while closing the reader: &quot;+ e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rESJkIyXEeOA_6J9sGme9g" name="getNextToken" specification="_q8Z_8IyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rESJkYyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
            <language>java</language>
            <body>if(tokenStack.isEmpty()) return makeNextToken();&#xD;
		else return tokenStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rESwoIyXEeOA_6J9sGme9g" name="putBack" specification="_rCZTMIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rESwoYyXEeOA_6J9sGme9g" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
            <language>java</language>
            <body>tokenStack.push(t);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rET-wIyXEeOA_6J9sGme9g" name="makeTTypeValue" specification="_rDSEAIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rET-wYyXEeOA_6J9sGme9g" name="ttype">
              <eAnnotations xmi:id="_rET-woyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rET-w4yXEeOA_6J9sGme9g" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rET-xIyXEeOA_6J9sGme9g" name="value" type="_rDNykYyXEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_rET-xYyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rET-xoyXEeOA_6J9sGme9g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rET-x4yXEeOA_6J9sGme9g" type="_q8e4cIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>return new ITTypeValue() {&#xD;
&#xD;
			@Override&#xD;
			public int getTTtype() {&#xD;
				return ttype;&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public Object getValue() {&#xD;
				return value;&#xD;
			}&#xD;
&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rEVM4IyXEeOA_6J9sGme9g" name="popTTypeValue" specification="_q8m0QIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rEVM4YyXEeOA_6J9sGme9g" type="_q8e4cIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>if(tTypeValueStack.isEmpty()) {&#xD;
			try {&#xD;
				_st.nextToken();&#xD;
			} catch (IOException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
			switch(_st.ttype){&#xD;
			case StreamTokenizer.TT_NUMBER:&#xD;
			{&#xD;
				return makeTTypeValue(_st.ttype, _st.nval);&#xD;
			}&#xD;
			case StreamTokenizer.TT_WORD:&#xD;
			{&#xD;
				return makeTTypeValue(_st.ttype,_st.sval);&#xD;
			}&#xD;
			default:&#xD;
				return makeTTypeValue(_st.ttype,(char)_st.ttype);&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			return tTypeValueStack.pop();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rEVz8IyXEeOA_6J9sGme9g" name="pushTTypeValue" specification="_rCeywIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rEWbAIyXEeOA_6J9sGme9g" name="ttv" type="_q8e4cIyXEeOA_6J9sGme9g"/>
            <language>java</language>
            <body>tTypeValueStack.push(ttv);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rEXCEIyXEeOA_6J9sGme9g" name="setSymbols" specification="_rDZYwIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rEXCEYyXEeOA_6J9sGme9g" name="symStrs" type="_rDW8gIyXEeOA_6J9sGme9g"/>
            <language>java</language>
            <body>symbols = WordTreeFactory.Singleton.makeSymbolTrees(symStrs);&#xD;
		for(WordTree wt:symbols) {&#xD;
			if ('\n' == wt.getValue() || '\r'==wt.getValue()) {&#xD;
				_st.eolIsSignificant(true);&#xD;
			}&#xD;
			wt.execute(new IWordTreeVisitor&lt;Void, Void>(){&#xD;
&#xD;
				@Override&#xD;
				public Void leafTerminalCase(WordTree host, Void... params) {&#xD;
					_st.ordinaryChar(host.getValue());&#xD;
					return null;&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public Void leafNonTerminalCase(WordTree host, Void... params) {&#xD;
					// ERROR!  Should never get here b/c after reading keywords into wordtrees, all leaf nodes should be terminal. &#xD;
					throw new IllegalArgumentException(&quot;ATokenizer.setSymbols.leafNonTerminalCase: Leaf node of keyword tree should never be non-terminal!&quot;);&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public Void nonLeafTerminalCase(WordTree host, Void... params) {&#xD;
					_st.ordinaryChar(host.getValue());&#xD;
					for(WordTree nextWT: host.getRest()) {&#xD;
						nextWT.execute(this);&#xD;
					}&#xD;
					return null;&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public Void nonLeafNonTerminalCase(WordTree host,&#xD;
						Void... params) {&#xD;
					// terminal and non-terminal leaf cases are the same&#xD;
					return nonLeafTerminalCase(host);&#xD;
				}&#xD;
				&#xD;
			});&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rEXpIIyXEeOA_6J9sGme9g" name="makeNextToken" specification="_q8p3kIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rEXpIYyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
            <language>java</language>
            <body>ITTypeValue ttv = popTTypeValue();&#xD;
&#xD;
		if (StreamTokenizer.TT_EOF != ttv.getTTtype()) {&#xD;
//			for(SymbolTree st: symbols ) {&#xD;
//				if(ttv.getTTtype() == st.getValue()) {&#xD;
//					System.out.println(&quot;ATokenizer.makeNextToken(): matching ttype found in symbols: &quot;+ttv.getTTtype()+&quot; == &quot;+st.getValue());&#xD;
//					return st.execute(stAlgo, &quot;&quot;);  // start with empty string since going into top level symbol first					&#xD;
//&#xD;
//				}&#xD;
//			}&#xD;
			for(WordTree wt: symbols ) {&#xD;
				if(ttv.getTTtype() == wt.getValue()) {&#xD;
					System.out.println(&quot;ATokenizer.makeNextToken(): matching ttype found in symbols: &quot;+ttv.getTTtype()+&quot; == &quot;+wt.getValue());&#xD;
					return wt.execute(wtAlgo); 				&#xD;
&#xD;
				}&#xD;
			}&#xD;
&#xD;
			switch (ttv.getTTtype()) {&#xD;
			case '&quot;':&#xD;
			{&#xD;
				return tokFac.makeToken(&quot;QuotedStringToken&quot;,_st.sval); //&quot;\&quot;&quot;+_st.sval+&quot;\&quot;&quot;);&#xD;
			}	&#xD;
			case StreamTokenizer.TT_NUMBER: {&#xD;
				System.err.println(&quot;Num Token: &quot;+ttv.getValue());&#xD;
				return tokFac.makeToken(&quot;Num&quot;,&quot;&quot; + ttv.getValue());&#xD;
			}&#xD;
			case StreamTokenizer.TT_WORD: {&#xD;
				System.err.println(&quot;Id Token: &quot;+ttv.getValue());&#xD;
				if (_st.sval.startsWith(&quot;_&quot;)) {&#xD;
					throw new IllegalArgumentException(&quot;Cannot define symbols starting with '_': reserved character&quot;);&#xD;
				}&#xD;
				if ((_st.sval.charAt(0) >= '0') &amp;&amp; (_st.sval.charAt(0) &lt;= '9')) {&#xD;
					throw new IllegalArgumentException(&quot;Cannot define symbols starting with '0' .. '9': reserved characters&quot;);                                &#xD;
				}&#xD;
				return tokFac.makeToken(&quot;Id&quot;,ttv.getValue().toString());&#xD;
			}&#xD;
			default: {&#xD;
				throw new IllegalArgumentException(getClass().getName()+&quot;: Illegal token type = &quot;+ttv.getValue());&#xD;
			}&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			closeReader();&#xD;
			System.err.println(&quot;EOF Token&quot;);&#xD;
			return Token.EOF;&#xD;
		}&#xD;
&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_q8VHcIyXEeOA_6J9sGme9g" name="ATokenizer" method="_rEQUYIyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_q8WVkIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_q8WVkYyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_q8VHcYyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_q8WVkoyXEeOA_6J9sGme9g" type="_q8KIUIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_q8Yx0IyXEeOA_6J9sGme9g" name="closeReader" visibility="protected" method="_rERigIyXEeOA_6J9sGme9g">
            <ownedComment xmi:id="_rEfk8IyXEeOA_6J9sGme9g">
              <body>Close the tokenizer's Reader</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_q8Z_8IyXEeOA_6J9sGme9g" name="getNextToken" method="_rESJkIyXEeOA_6J9sGme9g">
            <ownedComment xmi:id="_rEfk8YyXEeOA_6J9sGme9g">
              <body>Get the next token in the stream.&#xD;
	 * @return the next token in the stream.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rCYFEIyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_q8m0QIyXEeOA_6J9sGme9g" name="popTTypeValue" visibility="protected" method="_rEVM4IyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rCdkoIyXEeOA_6J9sGme9g" type="_q8e4cIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_q8p3kIyXEeOA_6J9sGme9g" name="makeNextToken" visibility="protected" method="_rEXpIIyXEeOA_6J9sGme9g">
            <ownedComment xmi:id="_rEgzEIyXEeOA_6J9sGme9g">
              <body>Use _st to scan the input, extracts, and returns an appropriate concrete Token.&#xD;
	 *&#xD;
	 * @return next token&#xD;
	 * @throws IllegalArgumentException Thrown if an illegal input is encountered.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rCh2EIyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rCZTMIyXEeOA_6J9sGme9g" name="putBack" method="_rESwoIyXEeOA_6J9sGme9g">
            <ownedComment xmi:id="_rEfk8oyXEeOA_6J9sGme9g">
              <body>Push the given token back into the stream.   &#xD;
	 * Multiple pushbacks are allowed to enable popping out of deeply nested recursions.&#xD;
	 * @param t The token to push back into the stream.</body>
            </ownedComment>
            <ownedParameter xmi:id="_rCZTMYyXEeOA_6J9sGme9g" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rCeywIyXEeOA_6J9sGme9g" name="pushTTypeValue" visibility="protected" method="_rEVz8IyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rCeywYyXEeOA_6J9sGme9g" name="ttv" type="_q8e4cIyXEeOA_6J9sGme9g"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rDGd0IyXEeOA_6J9sGme9g" name="ATokenizer" method="_rEPGQIyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_rDHr8IyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_rDHr8YyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_rEeW0IyXEeOA_6J9sGme9g">
              <body>Initialize _st to read from a input Reader file with the given input file name.&#xD;
	 *&#xD;
	 * @param inputFileName the name of the input text file&#xD;
	 * @throws FileNotFoundException</body>
            </ownedComment>
            <ownedParameter xmi:id="_rDGd0YyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_rDITAIyXEeOA_6J9sGme9g" type="_q8KIUIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rDSEAIyXEeOA_6J9sGme9g" name="makeTTypeValue" visibility="private" method="_rET-wIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rDSEAYyXEeOA_6J9sGme9g" name="ttype">
              <eAnnotations xmi:id="_rDT5MIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rDT5MYyXEeOA_6J9sGme9g" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_rDSrEIyXEeOA_6J9sGme9g" name="value" type="_rDNykYyXEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_rDUgQIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rDUgQYyXEeOA_6J9sGme9g" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_rDTSIIyXEeOA_6J9sGme9g" type="_q8e4cIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_rDZYwIyXEeOA_6J9sGme9g" name="setSymbols" visibility="protected" method="_rEXCEIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_rDZYwYyXEeOA_6J9sGme9g" name="symStrs" type="_rDW8gIyXEeOA_6J9sGme9g"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_q8e4cIyXEeOA_6J9sGme9g" name="ITTypeValue" visibility="protected" isAbstract="true">
            <ownedAttribute xmi:id="_q8hUsIyXEeOA_6J9sGme9g" name="tTtype" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q8ii0IyXEeOA_6J9sGme9g" name="value" type="_rDNykYyXEeOA_6J9sGme9g" isReadOnly="true" association="_rEoH0IyXEeOA_6J9sGme9g"/>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rEoH0IyXEeOA_6J9sGme9g" name="" memberEnd="_rEoH0YyXEeOA_6J9sGme9g _q8ii0IyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rEoH0YyXEeOA_6J9sGme9g" name="" type="_q8e4cIyXEeOA_6J9sGme9g" association="_rEoH0IyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rEqkEIyXEeOA_6J9sGme9g" name="" memberEnd="_rEqkEYyXEeOA_6J9sGme9g _rDs6wIyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rEqkEYyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rEqkEIyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rEtAUIyXEeOA_6J9sGme9g" name="" memberEnd="_rEtAUYyXEeOA_6J9sGme9g _rDvXAIyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rEtAUYyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rEtAUIyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rEvckIyXEeOA_6J9sGme9g" name="" memberEnd="_rEvckYyXEeOA_6J9sGme9g _rDxzQIyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rEvckYyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rEvckIyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rEx40IyXEeOA_6J9sGme9g" name="" memberEnd="_rEx40YyXEeOA_6J9sGme9g _rD02kIyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rEx40YyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rEx40IyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rE0VEIyXEeOA_6J9sGme9g" name="" memberEnd="_rE0VEYyXEeOA_6J9sGme9g _rD5vEIyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rE0VEYyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rE0VEIyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rE2xUYyXEeOA_6J9sGme9g" name="" memberEnd="_rE2xUoyXEeOA_6J9sGme9g _rD9ZcIyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rE2xUoyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rE2xUYyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_rE5NkYyXEeOA_6J9sGme9g" name="" memberEnd="_rE5NkoyXEeOA_6J9sGme9g _rEBD0IyXEeOA_6J9sGme9g">
          <ownedEnd xmi:id="_rE5NkoyXEeOA_6J9sGme9g" name="" type="_q8KIUIyXEeOA_6J9sGme9g" association="_rE5NkYyXEeOA_6J9sGme9g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_urPCIIyXEeOA_6J9sGme9g" name="BNFTokenizer">
          <ownedComment xmi:id="_urqf8IyXEeOA_6J9sGme9g">
            <body>Use the StreamTokenizer provided by in java.io to scan an input stream and extract an appropriate AToken.</body>
          </ownedComment>
          <generalization xmi:id="_uroDsIyXEeOA_6J9sGme9g" general="_q8KIUIyXEeOA_6J9sGme9g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uroqwIyXEeOA_6J9sGme9g" name="BNFTokenizer" specification="_urlncIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_uroqwYyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_uroqwoyXEeOA_6J9sGme9g" type="_urPCIIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>super(reader);&#xD;
 &#xD;
// this.setSymbols(Arrays.asList(new String[] {&quot;|&quot;, &quot;\n&quot;, &quot;::=&quot;, }));&#xD;
 &#xD;
 _st.resetSyntax();&#xD;
 _st.eolIsSignificant(true);&#xD;
 _st.slashSlashComments(false);&#xD;
 _st.slashStarComments(false);&#xD;
 _st.quoteChar('&quot;');&#xD;
 _st.wordChars('a', 'z');&#xD;
 _st.wordChars('A', 'Z');&#xD;
 _st.wordChars('0', '9');&#xD;
 _st.wordChars('_','_');&#xD;
 _st.whitespaceChars(0,32);&#xD;
  </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_urpR0IyXEeOA_6J9sGme9g" name="BNFTokenizer" specification="_urSFcIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_urpR0YyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_urpR0oyXEeOA_6J9sGme9g" type="_urPCIIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>this(new StringReader(text));&#xD;
  </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_urp44IyXEeOA_6J9sGme9g" name="makeNextToken" specification="_urTTkIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_urp44YyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
   if (StreamTokenizer.TT_EOF != _st.nextToken()) {&#xD;
     switch (_st.ttype) {&#xD;
       case '|':&#xD;
       {&#xD;
         return tokFac.makeToken(&quot;|&quot;,&quot;|&quot;);&#xD;
       }&#xD;
       case '\n':&#xD;
       {&#xD;
         return tokFac.makeToken(&quot;lf&quot;,&quot;\n&quot;);&#xD;
       }&#xD;
       case '&quot;':&#xD;
       {&#xD;
         return tokFac.makeToken(&quot;QuotedStringToken&quot;,&quot;\&quot;&quot;+_st.sval+&quot;\&quot;&quot;);&#xD;
       }&#xD;
       case ':':&#xD;
       {&#xD;
         if (_st.nextToken() != ':') {&#xD;
           throw new IllegalArgumentException(&quot;Illegal token!&quot;);&#xD;
         }&#xD;
         if (_st.nextToken() != '=') {&#xD;
           throw new IllegalArgumentException(&quot;Illegal token!&quot;);&#xD;
         }&#xD;
         return tokFac.makeToken(&quot;::=&quot;,&quot;::=&quot;);&#xD;
       }&#xD;
       case StreamTokenizer.TT_WORD:&#xD;
       {&#xD;
         if (_st.sval.startsWith(&quot;_&quot;)) {&#xD;
           throw new IllegalArgumentException(&quot;Cannot define symbols starting with '_': reserved character&quot;);&#xD;
         }&#xD;
         if ((_st.sval.charAt(0) >= '0') &amp;&amp; (_st.sval.charAt(0) &lt;= '9')) {&#xD;
           throw new IllegalArgumentException(&quot;Cannot define symbols starting with '0' .. '9': reserved characters&quot;);                                &#xD;
         }&#xD;
         return tokFac.makeToken(&quot;Id&quot;,_st.sval);&#xD;
       }&#xD;
       default:&#xD;
         throw new IllegalArgumentException(&quot;Illegal token (ttype=&quot; + new Character((char)_st.ttype) + &quot;, sval=&quot; + _st.sval + &quot;, nval=&quot; + _st.nval + &quot;)!&quot;);&#xD;
     }&#xD;
   }&#xD;
   else {&#xD;
     closeReader();&#xD;
     System.err.println(&quot;BNFTokenizer.getNextToken: EOF Token&quot;);&#xD;
     return Token.EOF;&#xD;
   }&#xD;
 }&#xD;
 catch (IOException e) {&#xD;
   System.err.println(&quot;BNFTokenizer.getNextToken: Exception = &quot;+e.getMessage());&#xD;
   return null;&#xD;
 }&#xD;
 &#xD;
  </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_urSFcIyXEeOA_6J9sGme9g" name="BNFTokenizer" method="_urpR0IyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_urSsgIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_urSsgYyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_urSFcYyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_urSsgoyXEeOA_6J9sGme9g" type="_urPCIIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_urTTkIyXEeOA_6J9sGme9g" name="makeNextToken" method="_urp44IyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_urncoIyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_urlncIyXEeOA_6J9sGme9g" name="BNFTokenizer" method="_uroqwIyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_urmOgIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_urmOgYyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_urlncYyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_urmOgoyXEeOA_6J9sGme9g" type="_urPCIIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_wBGB0IyXEeOA_6J9sGme9g" name="XMLTokenizer">
          <ownedComment xmi:id="_wBoNUIyXEeOA_6J9sGme9g">
            <body>Use the StreamTokenizer provided by in java.io to scan an input stream and extract an appropriate Token.</body>
          </ownedComment>
          <generalization xmi:id="_wBlKAIyXEeOA_6J9sGme9g" general="_q8KIUIyXEeOA_6J9sGme9g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wBmYIIyXEeOA_6J9sGme9g" name="XMLTokenizer" specification="_wBitwIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_wBmYIYyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_wBmYIoyXEeOA_6J9sGme9g" type="_wBGB0IyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>super(reader);&#xD;
		_st.ordinaryChar('/');&#xD;
&#xD;
		//this.setSymbols(Arrays.asList(new String[] {&quot;+&quot;, &quot;&lt;&quot;, &quot;&lt;/&quot;, &quot;>&quot;, &quot;/&quot; }));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wBm_MIyXEeOA_6J9sGme9g" name="XMLTokenizer" specification="_wBIeEIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_wBm_MYyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_wBm_MoyXEeOA_6J9sGme9g" type="_wBGB0IyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>this(new StringReader(text));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wBnmQIyXEeOA_6J9sGme9g" name="makeNextToken" specification="_wBJsMIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_wBnmQYyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			if (StreamTokenizer.TT_EOF != _st.nextToken()) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case '+':&#xD;
				{&#xD;
					System.err.println(&quot;Plus Token&quot;);&#xD;
					//STUDENT TO COMPLETE &#xD;
					return tokFac.makeToken(&quot;+&quot;,&quot;+&quot;);&#xD;
				}&#xD;
				case '&lt;':&#xD;
				{&#xD;
					System.err.println(&quot;Found &lt; Token&quot;);&#xD;
					Token next = getNextToken();&#xD;
					if(next.getLexeme().equals(&quot;/&quot;) ){&#xD;
						System.err.println(&quot;&lt;/ Token&quot;);&#xD;
						//STUDENT TO COMPLETE &#xD;
						return tokFac.makeToken(&quot;&lt;/&quot;,&quot;&lt;/&quot;);&#xD;
&#xD;
					}&#xD;
					else {&#xD;
						_st.pushBack();   // Ok only for this LL(2) situation. Need more robust pushback mechansim for LL(k)&#xD;
&#xD;
						System.err.println(&quot;Left Bracket Token&quot;);&#xD;
						//STUDENT TO COMPLETE &#xD;
						return tokFac.makeToken(&quot;&lt;&quot;,&quot;&lt;&quot;);&#xD;
					}&#xD;
				}&#xD;
				case '>':&#xD;
				{&#xD;
					System.err.println(&quot;Right Bracket Token&quot;);&#xD;
					//STUDENT TO COMPLETE &#xD;
					return tokFac.makeToken(&quot;>&quot;,&quot;>&quot;);&#xD;
				}&#xD;
				case '/':&#xD;
				{&#xD;
					System.err.println(&quot;Forward Slash Token&quot;);&#xD;
					//STUDENT TO COMPLETE &#xD;
					return tokFac.makeToken(&quot;/&quot;,&quot;/&quot;);&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER:&#xD;
				{&#xD;
					System.err.println(&quot;Num Token: &quot;+_st.nval);&#xD;
					//STUDENT TO COMPLETE &#xD;
					return tokFac.makeToken(&quot;Num&quot;,&quot;&quot; + _st.nval);&#xD;
				}&#xD;
				case StreamTokenizer.TT_WORD:&#xD;
				{&#xD;
					System.err.println(&quot;Id Token: &quot;+_st.sval);&#xD;
					//STUDENT TO COMPLETE &#xD;
					return tokFac.makeToken(&quot;Id&quot;,_st.sval);&#xD;
				}&#xD;
				default:&#xD;
				{&#xD;
					throw new IllegalArgumentException(&quot;XMLTokenizer: Illegal token type = &quot;+_st.ttype);&#xD;
				}&#xD;
				}&#xD;
			}&#xD;
			else {&#xD;
				closeReader();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				//STUDENT TO COMPLETE &#xD;
				return Token.EOF;&#xD;
				//throw new IllegalStateException(&quot;Reading past EOF!&quot;);&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_wBIeEIyXEeOA_6J9sGme9g" name="XMLTokenizer" method="_wBm_MIyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_wBJFIIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_wBJFIYyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_wBIeEYyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_wBJFIoyXEeOA_6J9sGme9g" type="_wBGB0IyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_wBJsMIyXEeOA_6J9sGme9g" name="makeNextToken" visibility="protected" method="_wBnmQIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_wBki8IyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_wBitwIyXEeOA_6J9sGme9g" name="XMLTokenizer" method="_wBmYIIyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_wBjU0YyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_wBj74IyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_wBjU0IyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_wBj74YyXEeOA_6J9sGme9g" type="_wBGB0IyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_-mPtUIyXEeOA_6J9sGme9g" name="Tokenizer1">
          <ownedComment xmi:id="_-mtnYIyXEeOA_6J9sGme9g">
            <body>Use the StreamTokenizer provided by in java.io to scan an input stream and extract an appropriate Token.</body>
          </ownedComment>
          <generalization xmi:id="_-mqkEYyXEeOA_6J9sGme9g" general="_q8KIUIyXEeOA_6J9sGme9g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-msZQIyXEeOA_6J9sGme9g" name="Tokenizer1" specification="_-mou4IyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_-msZQYyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_-msZQoyXEeOA_6J9sGme9g" type="_-mPtUIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>super(reader);
 //this.setSymbols(Arrays.asList(new String[] {&quot;+&quot;, &quot;*&quot;}));
  </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-msZQ4yXEeOA_6J9sGme9g" name="Tokenizer1" specification="_-mSJkIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_-msZRIyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_-mtAUIyXEeOA_6J9sGme9g" type="_-mPtUIyXEeOA_6J9sGme9g" direction="return"/>
            <language>java</language>
            <body>this(new StringReader(text));
  </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-mtAUYyXEeOA_6J9sGme9g" name="makeNextToken" specification="_-mTXsIyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_-mtAUoyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
            <language>java</language>
            <body>try {
   if (StreamTokenizer.TT_EOF != _st.nextToken()) {
     switch (_st.ttype) {
       case '+':
       {
         System.err.println(&quot;Plus Token&quot;);
         //STUDENT TO COMPLETE 
         return tokFac.makeToken(&quot;+&quot;,&quot;+&quot;);
       }
       case '*':
       {
         System.err.println(&quot;Star Token&quot;);
         //STUDENT TO COMPLETE 
         return tokFac.makeToken(&quot;*&quot;,&quot;*&quot;);
       }
       case StreamTokenizer.TT_NUMBER:
       {
         System.err.println(&quot;Num Token: &quot;+_st.nval);
          //STUDENT TO COMPLETE 
         return tokFac.makeToken(&quot;Num&quot;,&quot;&quot; + _st.nval);
       }
       case StreamTokenizer.TT_WORD:
       {
         System.err.println(&quot;Id Token: &quot;+_st.sval);
          //STUDENT TO COMPLETE 
         return tokFac.makeToken(&quot;Id&quot;,_st.sval);
       }
       default:
         throw new IllegalArgumentException(&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);
     }
   }
   else {
     closeReader();
     System.err.println(&quot;EOF Token&quot;);
      //STUDENT TO COMPLETE 
     return Token.EOF;
     //throw new IllegalStateException(&quot;Reading past EOF!&quot;);
   }
 }
 catch (IOException e) {
   System.out.println(e.getMessage());
   return null;
 }
  </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_-mSJkIyXEeOA_6J9sGme9g" name="Tokenizer1" method="_-msZQ4yXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_-mSwoIyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-mSwoYyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_-mSJkYyXEeOA_6J9sGme9g" name="text">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_-mSwooyXEeOA_6J9sGme9g" type="_-mPtUIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_-mTXsIyXEeOA_6J9sGme9g" name="makeNextToken" visibility="protected" method="_-mtAUYyXEeOA_6J9sGme9g">
            <ownedParameter xmi:id="_-mqkEIyXEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_-mou4IyXEeOA_6J9sGme9g" name="Tokenizer1" method="_-msZQIyXEeOA_6J9sGme9g">
            <eAnnotations xmi:id="_-mpV8YyXEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_-mpV8oyXEeOA_6J9sGme9g" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_-mpV8IyXEeOA_6J9sGme9g" name="reader" type="_rBO1kIyXEeOA_6J9sGme9g"/>
            <ownedParameter xmi:id="_-mp9AIyXEeOA_6J9sGme9g" type="_-mPtUIyXEeOA_6J9sGme9g" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nyDHUIyYEeOA_6J9sGme9g" client="_q8KIUIyXEeOA_6J9sGme9g" supplier="_q8e4cIyXEeOA_6J9sGme9g"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_MVhEQIyZEeOA_6J9sGme9g" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_MbqIgIyZEeOA_6J9sGme9g" clientDependency="_MikBwIyZEeOA_6J9sGme9g" name="ALexer" visibility="package" isAbstract="true">
            <ownedAttribute xmi:id="_MkTuMIyZEeOA_6J9sGme9g" name="tokenStream" visibility="private" isLeaf="true" type="_MidUEIyZEeOA_6J9sGme9g" isReadOnly="true" association="_MlgoEIyZEeOA_6J9sGme9g"/>
            <interfaceRealization xmi:id="_MikBwIyZEeOA_6J9sGme9g" client="_MbqIgIyZEeOA_6J9sGme9g" supplier="_MBWT4IcvEeO394xrVBhzLQ" contract="_MBWT4IcvEeO394xrVBhzLQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk3H0IyZEeOA_6J9sGme9g" name="ALexer" specification="_Mil28IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk3H0YyZEeOA_6J9sGme9g" name="in" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_Mk3H0oyZEeOA_6J9sGme9g" type="_MbqIgIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>tokenStream = tokenize(in);
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk3u4IyZEeOA_6J9sGme9g" name="getNextToken" specification="_MbyEUIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk3u4YyZEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
              <language>java</language>
              <body>return tokenStream.pop(); </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk4V8IyZEeOA_6J9sGme9g" name="putBack" specification="_Mio6QIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk4V8YyZEeOA_6J9sGme9g" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
              <language>java</language>
              <body>tokenStream.push(t); </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk49AIyZEeOA_6J9sGme9g" name="tokenize" specification="_Mivn8IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk49AYyZEeOA_6J9sGme9g" name="r" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_Mk49AoyZEeOA_6J9sGme9g" type="_MidUEIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>TokenFactory tokFact = TokenFactory.Singleton;
 int loc = 0;
 boolean needsDelimiter = false;
 LinkedList&lt;Token> tokens = new LinkedList&lt;Token>();
 StringBuilder in = readerToStringBuilder(r);
 do {
   boolean foundType = false;
   Matcher m = tokenPattern().matcher(in);
   if (m.lookingAt()) {
     for (ARule rule : getRules()) {
       String value = m.group(rule.groupName);
       if (value != null) {
         // Check delimiter status
         if (needsDelimiter &amp;&amp; !rule.isDelimiter) FatalError.die(&quot;Missing delimiter at character #%d:%n%.32s&quot;, loc, in);
         if (rule.needsUnescaping) value = unescapeString(value);
         // Create &amp; add token
         if (!rule.isIgnored) tokens.add(tokFact.makeToken(rule.name, value));
         // Consume input
         int len = m.end();
         in.delete(0, len);
         loc += len;
         needsDelimiter = !rule.isDelimiter;
         // Move on to next token
         foundType = true;
         break;
       }
     }
     // Make sure we found the token type
     if (!foundType) FatalError.die(&quot;Unknown token match&quot;);
   }
   else FatalError.die(&quot;Syntax error at character #%d:%n%.32s&quot;, loc, in);
 } while (in.length() > 0);
 // Add End of Input token (needed for supporting EPSILON pushback)
 tokens.add(Token.EOF);
 return tokens;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk6yMIyZEeOA_6J9sGme9g" name="unescapeString" specification="_McBU4IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk6yMYyZEeOA_6J9sGme9g" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mk6yMoyZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String s = value;
 s = s.replace(&quot;\\r&quot;, &quot;\r&quot;).replace(&quot;\\n&quot;, &quot;\n&quot;);
 s = s.replace(&quot;\\t&quot;, &quot;\t&quot;).replaceAll(&quot;\\\\(.)&quot;, &quot;$1&quot;);
 return s;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk8AUIyZEeOA_6J9sGme9g" name="readerToStringBuilder" specification="_Mi0gcIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk8AUYyZEeOA_6J9sGme9g" name="r" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_Mk8AUoyZEeOA_6J9sGme9g" type="_Mj0mAIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>char[] buf = new char[1024];
 StringBuilder sb = new StringBuilder();
 try {
   int n = 0;
   while (n >= 0) {
     n = r.read(buf);
     if (n > 0) sb.append(buf, 0, n);
   }
   r.close();
 }
 catch (IOException e) { FatalError.die(&quot;Error reading tokenize input: %s&quot;, e); }
 return sb;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk8nYIyZEeOA_6J9sGme9g" name="toString" specification="_McG0cIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk8nYYyZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return String.format(&quot;&lt;ALexer: %s>&quot;, tokenStream);
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MbyEUIyZEeOA_6J9sGme9g" name="getNextToken" method="_Mk3u4IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MioTMIyZEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mb4K8IyZEeOA_6J9sGme9g" name="tokenPattern" visibility="protected" isAbstract="true">
              <ownedParameter xmi:id="_MjzX4IyZEeOA_6J9sGme9g" type="_MigXYIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mb6AIIyZEeOA_6J9sGme9g" name="getRules" visibility="protected" isAbstract="true">
              <eAnnotations xmi:id="_Mb7OQYyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Mb71UIyZEeOA_6J9sGme9g" key="generic_container"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Mb6nMIyZEeOA_6J9sGme9g" type="_McsqUIyZEeOA_6J9sGme9g" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mb7OQIyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Mb9DcIyZEeOA_6J9sGme9g" name="getRule" visibility="protected" isAbstract="true">
              <ownedParameter xmi:id="_Mb9DcYyZEeOA_6J9sGme9g" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MiuZ0IyZEeOA_6J9sGme9g" type="_McsqUIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_McBU4IyZEeOA_6J9sGme9g" name="unescapeString" visibility="private" method="_Mk6yMIyZEeOA_6J9sGme9g">
              <ownedComment xmi:id="_MlNtIIyZEeOA_6J9sGme9g">
                <body>Handle basic escape sequences in a string of characters
   * Supports \r \n \t, and replaces \x with x for any other character x.</body>
              </ownedComment>
              <ownedParameter xmi:id="_McBU4YyZEeOA_6J9sGme9g" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_McDxIIyZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_McG0cIyZEeOA_6J9sGme9g" name="toString" method="_Mk8nYIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_McHbgIyZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Mil28IyZEeOA_6J9sGme9g" name="ALexer" visibility="package" method="_Mk3H0IyZEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_MinFEIyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_MinFEYyZEeOA_6J9sGme9g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_MlMfAIyZEeOA_6J9sGme9g">
                <body>Default constructor
   * @param in - language text to be parsed</body>
              </ownedComment>
              <ownedParameter xmi:id="_MimeAIyZEeOA_6J9sGme9g" name="in" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MinsIIyZEeOA_6J9sGme9g" type="_MbqIgIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mio6QIyZEeOA_6J9sGme9g" name="putBack" method="_Mk4V8IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MiphUIyZEeOA_6J9sGme9g" name="t" type="_MBYJEIcvEeO394xrVBhzLQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mivn8IyZEeOA_6J9sGme9g" name="tokenize" visibility="private" method="_Mk49AIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mivn8YyZEeOA_6J9sGme9g" name="r" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_Mjz-8IyZEeOA_6J9sGme9g" type="_MidUEIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mi0gcIyZEeOA_6J9sGme9g" name="readerToStringBuilder" visibility="private" method="_Mk8AUIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mi0gcYyZEeOA_6J9sGme9g" name="r" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_Mj2bMIyZEeOA_6J9sGme9g" type="_Mj0mAIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_McsqUIyZEeOA_6J9sGme9g" name="ARule" isAbstract="true">
            <ownedAttribute xmi:id="_MkZ00IyZEeOA_6J9sGme9g" name="name" visibility="package" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_MkbqAIyZEeOA_6J9sGme9g" name="groupName" visibility="package" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Mkc4IYyZEeOA_6J9sGme9g" name="pattern" visibility="package" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_MketUIyZEeOA_6J9sGme9g" name="isIgnored" visibility="package" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_MkgigIyZEeOA_6J9sGme9g" name="isDelimiter" visibility="package" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_MkhwoIyZEeOA_6J9sGme9g" name="needsUnescaping" visibility="package" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk_DoIyZEeOA_6J9sGme9g" name="ARule" specification="_Mc764IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk_DoYyZEeOA_6J9sGme9g" name="n">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mk_DooyZEeOA_6J9sGme9g" name="p">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mk_Do4yZEeOA_6J9sGme9g" type="_McsqUIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>isIgnored = n.startsWith(&quot;*&quot;);
 isDelimiter = n.startsWith(&quot;*&quot;) || n.startsWith(&quot;.&quot;);
 needsUnescaping = n.startsWith(&quot;@&quot;);
 name = n.replaceFirst(&quot;^[.*@]&quot;, &quot;&quot;);
 if (name.matches(&quot;[a-zA-Z][a-zA-Z0-9]*&quot;) &amp;&amp; hasNamedGroup(name, p)) {
   groupName = name;
   pattern = p;
 }
 else {
   groupName = nextGroupName();
   pattern = String.format(&quot;(?&lt;%s>%s)&quot;, groupName, p);
 }
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Mk_qsIyZEeOA_6J9sGme9g" name="hasNamedGroup" specification="_MdAzYIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mk_qsYyZEeOA_6J9sGme9g" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mk_qsoyZEeOA_6J9sGme9g" name="pattern">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mk_qs4yZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>boolean result = false;
 try {
   if (pattern.contains(String.format(&quot;(?&lt;%s>&quot;, name))) {
     // throws IllegalArgumentException if group doesn't exist
     Matcher m = Pattern.compile(&quot;$|&quot;+pattern).matcher(&quot;&quot;);
     m.matches();
     m.group(name);
     result = true;
   }
 } catch (IllegalArgumentException ex) { }
 return result;
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Mc764IyZEeOA_6J9sGme9g" name="ARule" visibility="package" method="_Mk_DoIyZEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_Mc9JAIyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Mc9JAYyZEeOA_6J9sGme9g" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Mc8h8IyZEeOA_6J9sGme9g" name="n">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mc8h8YyZEeOA_6J9sGme9g" name="p">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mc9wEIyZEeOA_6J9sGme9g" type="_McsqUIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mc-XIIyZEeOA_6J9sGme9g" name="nextGroupName" visibility="protected" isAbstract="true">
              <ownedParameter xmi:id="_Mc--MIyZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_MdAzYIyZEeOA_6J9sGme9g" name="hasNamedGroup" visibility="private" method="_Mk_qsIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MdAzYYyZEeOA_6J9sGme9g" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MdAzYoyZEeOA_6J9sGme9g" name="pattern">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MdBacIyZEeOA_6J9sGme9g" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_MdR5IIyZEeOA_6J9sGme9g" name="ILexerFactory">
            <ownedAttribute xmi:id="_MdZ08IyZEeOA_6J9sGme9g" clientDependency="_bKY74IybEeOA_6J9sGme9g" name="terminalSet" type="_MjDxAYyZEeOA_6J9sGme9g" isReadOnly="true" association="_MleL0IyZEeOA_6J9sGme9g"/>
            <ownedOperation xmi:id="_MdXYsIyZEeOA_6J9sGme9g" name="makeLexer">
              <ownedParameter xmi:id="_MdXYsYyZEeOA_6J9sGme9g" name="in">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MjCi4IyZEeOA_6J9sGme9g" type="_MBWT4IcvEeO394xrVBhzLQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_MjDJ8IyZEeOA_6J9sGme9g" name="makeLexer">
              <ownedParameter xmi:id="_MjDJ8YyZEeOA_6J9sGme9g" name="in" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MjDxAIyZEeOA_6J9sGme9g" type="_MBWT4IcvEeO394xrVBhzLQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_MdgioIyZEeOA_6J9sGme9g" clientDependency="_MjSagYyZEeOA_6J9sGme9g" name="LexerFactory">
            <ownedAttribute xmi:id="_MkmCEIyZEeOA_6J9sGme9g" name="rules" visibility="private" isLeaf="true" type="_McsqUIyZEeOA_6J9sGme9g" isReadOnly="true" association="_MlidQIyZEeOA_6J9sGme9g">
              <qualifier xmi:id="_MkpscIyZEeOA_6J9sGme9g">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Mkq6kIyZEeOA_6J9sGme9g" name="tokenPattern" visibility="private" isLeaf="true" type="_MigXYIyZEeOA_6J9sGme9g" isReadOnly="true" association="_MlkScIyZEeOA_6J9sGme9g"/>
            <ownedAttribute xmi:id="_MksvwIyZEeOA_6J9sGme9g" name="gnCount" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_MktW0IyZEeOA_6J9sGme9g" value="0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_MjSagYyZEeOA_6J9sGme9g" client="_MdgioIyZEeOA_6J9sGme9g" supplier="_MdR5IIyZEeOA_6J9sGme9g" contract="_MdR5IIyZEeOA_6J9sGme9g"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlBf4IyZEeOA_6J9sGme9g" name="reverseSorted" specification="_Mj9v8IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlBf4YyZEeOA_6J9sGme9g" name="a" type="_Mj7TsIyZEeOA_6J9sGme9g">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlBf4oyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MlBf44yZEeOA_6J9sGme9g" type="_Mj7TsIyZEeOA_6J9sGme9g" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlBf5IyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;T> l = new ArrayList&lt;T>(Arrays.asList(a));
 Collections.sort(l);
 Collections.reverse(l);
 return l;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlCG8IyZEeOA_6J9sGme9g" name="fromKeywords" specification="_MdmCMIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlCG8YyZEeOA_6J9sGme9g" name="keywords">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlCG8oyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MlCG84yZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>LinkedHashMap&lt;String, String> rawRules = new LinkedHashMap&lt;>();
 // Custom keywords
 for (String k : reverseSorted(keywords)) {
   String pattern;
   // word-type keyword
   if (k.matches(&quot;\\w+&quot;)) pattern = k + &quot;(?!\\w)&quot;;
   // delimiter-type keyword
   else {
     pattern = Pattern.quote(k);
     k = &quot;.&quot; + k;
   }
   rawRules.put(k, pattern);
 }
 // Standard rules
 rawRules.put(&quot;*Whitespace&quot;, &quot;\\s&quot;);
 rawRules.put(&quot;Num&quot;, &quot;-?(\\d*\\.\\d+|\\d+\\.?)&quot;);
 rawRules.put(&quot;@QuotedStringToken&quot;, &quot;\&quot;(?&lt;QuotedStringToken>([^\\\\\&quot;]|\\\\.)*)\&quot;&quot;);
 rawRules.put(&quot;Id&quot;, &quot;[a-zA-Z]\\w*&quot;);
 return new LexerFactory(rawRules);
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlCuAIyZEeOA_6J9sGme9g" name="LexerFactory" specification="_Mdsv4IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlCuAYyZEeOA_6J9sGme9g" name="specFilePath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MlCuAoyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>this(new File(specFilePath));
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlCuA4yZEeOA_6J9sGme9g" name="LexerFactory" specification="_MkD2kIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlCuBIyZEeOA_6J9sGme9g" name="specFile" type="_MjG0UIyZEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MlCuBYyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>this(new FileReader(specFile));
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlDVEIyZEeOA_6J9sGme9g" name="LexerFactory" specification="_MjWr8IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlDVEYyZEeOA_6J9sGme9g" name="spec" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MlDVEoyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>this(new ConfigLineReader().parse(new BufferedReader(spec), &quot;:&quot;));
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlEjMIyZEeOA_6J9sGme9g" name="LexerFactory" specification="_MkFrwIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlEjMYyZEeOA_6J9sGme9g" name="rawRules" type="_MjP-QIyZEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MlEjMoyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>rules = new LinkedHashMap&lt;String, ARule>();
 tokenPattern = parseRules(rawRules);
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlFKQIyZEeOA_6J9sGme9g" name="makeLexer" specification="_Md4WEIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlFKQYyZEeOA_6J9sGme9g" name="in">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MlFKQoyZEeOA_6J9sGme9g" type="_MBWT4IcvEeO394xrVBhzLQ" direction="return"/>
              <language>java</language>
              <body>return makeLexer(new StringReader(in));
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlFxUIyZEeOA_6J9sGme9g" name="makeLexer" specification="_MjZvQIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlFxUYyZEeOA_6J9sGme9g" name="in" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MlFxUoyZEeOA_6J9sGme9g" type="_MBWT4IcvEeO394xrVBhzLQ" direction="return"/>
              <language>java</language>
              <body>return new ALexer(in) {
   @Override protected Pattern tokenPattern() { return tokenPattern; }
   @Override protected Collection&lt;ARule> getRules() { return rules.values(); }
   @Override protected ARule getRule(String name) { return rules.get(name); }
 };
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlGYYIyZEeOA_6J9sGme9g" name="getTerminalSet" specification="_Md8ngIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlGYYYyZEeOA_6J9sGme9g" type="_MjDxAYyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>Set&lt;String> terminals = new HashSet&lt;String>();
 for (ARule r : rules.values()) if (!r.isIgnored) terminals.add(r.name);
 return terminals;
  </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlHmgIyZEeOA_6J9sGme9g" name="parseRules" specification="_MkJWIIyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MlHmgYyZEeOA_6J9sGme9g" name="rawRules" type="_MjP-QIyZEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MlHmgoyZEeOA_6J9sGme9g" type="_MigXYIyZEeOA_6J9sGme9g" direction="return"/>
              <language>java</language>
              <body>StringBuilder patternBuilder = new StringBuilder();
 for (Map.Entry&lt;String, String> rawRule : rawRules.entrySet()) {
   String rawPattern = rawRule.getValue().trim();
   ARule rule = new XRule(rawRule.getKey(), rawPattern);
   if (!rules.isEmpty()) patternBuilder.append('|');
   patternBuilder.append(rule.pattern);
   rules.put(rule.name, rule);
 }
 return Pattern.compile(patternBuilder.toString());
  </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_MdmCMIyZEeOA_6J9sGme9g" name="fromKeywords" isStatic="true" method="_MlCG8IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_MdmCMYyZEeOA_6J9sGme9g" name="keywords">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mdn3YYyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MjUPsIyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mdsv4IyZEeOA_6J9sGme9g" name="LexerFactory" method="_MlCuAIyZEeOA_6J9sGme9g" raisedException="_rBIu8IyXEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_MdtW8IyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_MdtW8YyZEeOA_6J9sGme9g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_MlRXgIyZEeOA_6J9sGme9g">
                <body>Convenience constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_Mdsv4YyZEeOA_6J9sGme9g" name="specFilePath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MdtW8oyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Md4WEIyZEeOA_6J9sGme9g" name="makeLexer" method="_MlFKQIyZEeOA_6J9sGme9g">
              <ownedComment xmi:id="_MlSloYyZEeOA_6J9sGme9g">
                <body>Convenience overload for {@link LexerFactory#makeLexer(Reader)}</body>
              </ownedComment>
              <ownedParameter xmi:id="_Md49IIyZEeOA_6J9sGme9g" name="in">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_MjZIMIyZEeOA_6J9sGme9g" type="_MBWT4IcvEeO394xrVBhzLQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Md8ngIyZEeOA_6J9sGme9g" name="getTerminalSet" method="_MlGYYIyZEeOA_6J9sGme9g">
              <ownedComment xmi:id="_MlTMsYyZEeOA_6J9sGme9g">
                <body>@return the set of names of all terminals</body>
              </ownedComment>
              <ownedParameter xmi:id="_Mja9YIyZEeOA_6J9sGme9g" type="_MjDxAYyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_MjWr8IyZEeOA_6J9sGme9g" name="LexerFactory" method="_MlDVEIyZEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_MjXTAIyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_MjXTAYyZEeOA_6J9sGme9g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_MlR-kYyZEeOA_6J9sGme9g">
                <body>Convenience constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_MjWr8YyZEeOA_6J9sGme9g" name="spec" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MjX6EIyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_MjZvQIyZEeOA_6J9sGme9g" name="makeLexer" method="_MlFxUIyZEeOA_6J9sGme9g">
              <ownedComment xmi:id="_MlTMsIyZEeOA_6J9sGme9g">
                <body>Construct a new ITokenizer.
   * @param in - Input to be tokenized.
   * @return new ITokenizer for tokenizing &lt;var>in&lt;/var>.</body>
              </ownedComment>
              <ownedParameter xmi:id="_MjZvQYyZEeOA_6J9sGme9g" name="in" type="_rBO1kIyXEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MjaWUIyZEeOA_6J9sGme9g" type="_MBWT4IcvEeO394xrVBhzLQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Mj9v8IyZEeOA_6J9sGme9g" name="reverseSorted" visibility="private" isStatic="true" method="_MlBf4IyZEeOA_6J9sGme9g">
              <ownedParameter xmi:id="_Mj9v8YyZEeOA_6J9sGme9g" name="a" type="_Mj7TsIyZEeOA_6J9sGme9g">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MkAMMYyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Mj--EIyZEeOA_6J9sGme9g" type="_Mj7TsIyZEeOA_6J9sGme9g" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mj--EYyZEeOA_6J9sGme9g" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_MkD2kIyZEeOA_6J9sGme9g" name="LexerFactory" method="_MlCuA4yZEeOA_6J9sGme9g" raisedException="_rBIu8IyXEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_MkEdoIyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_MkEdoYyZEeOA_6J9sGme9g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_MlR-kIyZEeOA_6J9sGme9g">
                <body>Convenience constructor</body>
              </ownedComment>
              <ownedParameter xmi:id="_MkD2kYyZEeOA_6J9sGme9g" name="specFile" type="_MjG0UIyZEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MkEdooyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_MkFrwIyZEeOA_6J9sGme9g" name="LexerFactory" method="_MlEjMIyZEeOA_6J9sGme9g">
              <eAnnotations xmi:id="_MkGS0YyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_MkGS0oyZEeOA_6J9sGme9g" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_MlSloIyZEeOA_6J9sGme9g">
                <body>Construct a lexer factory from a given lexer specification.</body>
              </ownedComment>
              <ownedParameter xmi:id="_MkGS0IyZEeOA_6J9sGme9g" name="rawRules" type="_MjP-QIyZEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MkG54IyZEeOA_6J9sGme9g" type="_MdgioIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_MkJWIIyZEeOA_6J9sGme9g" name="parseRules" visibility="private" method="_MlHmgIyZEeOA_6J9sGme9g">
              <ownedComment xmi:id="_MlTzwIyZEeOA_6J9sGme9g">
                <body>Constructor helper for parsing the rules</body>
              </ownedComment>
              <ownedParameter xmi:id="_MkJWIYyZEeOA_6J9sGme9g" name="rawRules" type="_MjP-QIyZEeOA_6J9sGme9g"/>
              <ownedParameter xmi:id="_MkJ9MIyZEeOA_6J9sGme9g" type="_MigXYIyZEeOA_6J9sGme9g" direction="return"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_MeCuIIyZEeOA_6J9sGme9g" name="XRule" visibility="private">
              <generalization xmi:id="_MjcLgIyZEeOA_6J9sGme9g" general="_McsqUIyZEeOA_6J9sGme9g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlI0oIyZEeOA_6J9sGme9g" name="XRule" specification="_MeFxcIyZEeOA_6J9sGme9g">
                <ownedParameter xmi:id="_MlI0oYyZEeOA_6J9sGme9g" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_MlI0ooyZEeOA_6J9sGme9g" name="p">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_MlI0o4yZEeOA_6J9sGme9g" type="_MeCuIIyZEeOA_6J9sGme9g" direction="return"/>
                <language>java</language>
                <body>super(n, p); </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_MlJbsIyZEeOA_6J9sGme9g" name="nextGroupName" specification="_MeKp8IyZEeOA_6J9sGme9g">
                <ownedParameter xmi:id="_MlJbsYyZEeOA_6J9sGme9g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return &quot;G&quot; + (gnCount ++);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_MeFxcIyZEeOA_6J9sGme9g" name="XRule" visibility="package" method="_MlI0oIyZEeOA_6J9sGme9g">
                <eAnnotations xmi:id="_MeG_kIyZEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_MeG_kYyZEeOA_6J9sGme9g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_MeFxcYyZEeOA_6J9sGme9g" name="n">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_MeGYgIyZEeOA_6J9sGme9g" name="p">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_MeHmoIyZEeOA_6J9sGme9g" type="_MeCuIIyZEeOA_6J9sGme9g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_MeKp8IyZEeOA_6J9sGme9g" name="nextGroupName" visibility="protected" method="_MlJbsIyZEeOA_6J9sGme9g">
                <ownedParameter xmi:id="_MePicIyZEeOA_6J9sGme9g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Mj7TsIyZEeOA_6J9sGme9g" name="T"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_MleL0IyZEeOA_6J9sGme9g" name="" memberEnd="_MleL0YyZEeOA_6J9sGme9g _MdZ08IyZEeOA_6J9sGme9g">
            <ownedEnd xmi:id="_MleL0YyZEeOA_6J9sGme9g" name="" type="_MdR5IIyZEeOA_6J9sGme9g" association="_MleL0IyZEeOA_6J9sGme9g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_MlgoEIyZEeOA_6J9sGme9g" name="" memberEnd="_MlgoEYyZEeOA_6J9sGme9g _MkTuMIyZEeOA_6J9sGme9g">
            <ownedEnd xmi:id="_MlgoEYyZEeOA_6J9sGme9g" name="" type="_MbqIgIyZEeOA_6J9sGme9g" association="_MlgoEIyZEeOA_6J9sGme9g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_MlidQIyZEeOA_6J9sGme9g" name="" memberEnd="_MlidQYyZEeOA_6J9sGme9g _MkmCEIyZEeOA_6J9sGme9g">
            <ownedEnd xmi:id="_MlidQYyZEeOA_6J9sGme9g" name="" type="_MdgioIyZEeOA_6J9sGme9g" association="_MlidQIyZEeOA_6J9sGme9g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_MlkScIyZEeOA_6J9sGme9g" name="" memberEnd="_MlkScYyZEeOA_6J9sGme9g _Mkq6kIyZEeOA_6J9sGme9g">
            <ownedEnd xmi:id="_MlkScYyZEeOA_6J9sGme9g" name="" type="_MdgioIyZEeOA_6J9sGme9g" association="_MlkScIyZEeOA_6J9sGme9g"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_bKY74IybEeOA_6J9sGme9g" name="Instantiates" client="_MdZ08IyZEeOA_6J9sGme9g" supplier="_MBWT4IcvEeO394xrVBhzLQ"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_BUTx4IyfEeOA_6J9sGme9g" name="Instantiates" client="_MBWT4IcvEeO394xrVBhzLQ" supplier="_MBYJEIcvEeO394xrVBhzLQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_MBYJEIcvEeO394xrVBhzLQ" clientDependency="_6p2sEIyeEeOA_6J9sGme9g" name="Token">
        <ownedComment xmi:id="_6sUxQIyeEeOA_6J9sGme9g">
          <body>Abstract token class.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_6sCdYIyeEeOA_6J9sGme9g" name="EOF" isLeaf="true" isStatic="true" type="_MBYJEIcvEeO394xrVBhzLQ" isReadOnly="true" association="_6sa34IyeEeOA_6J9sGme9g">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_6sDrgIyeEeOA_6J9sGme9g" value="new Token(&quot;EOF&quot;, &quot;End Of File&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6sESkIyeEeOA_6J9sGme9g" name="_name" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6sGu0IyeEeOA_6J9sGme9g" name="_lexeme" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_6p2sEIyeEeOA_6J9sGme9g" client="_MBYJEIcvEeO394xrVBhzLQ" supplier="_Pv9ToIcvEeO394xrVBhzLQ" contract="_Pv9ToIcvEeO394xrVBhzLQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6sODkIyeEeOA_6J9sGme9g" name="Token" specification="_6n91sIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6sODkYyeEeOA_6J9sGme9g" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6sOqoIyeEeOA_6J9sGme9g" name="lexeme">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6sOqoYyeEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
          <language>java</language>
          <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6sPRsIyeEeOA_6J9sGme9g" name="execute" specification="_6rr4EIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6sPRsYyeEeOA_6J9sGme9g" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_6sPRsoyeEeOA_6J9sGme9g" name="params" type="_6ro0wIyeEeOA_6J9sGme9g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6sPRs4yeEeOA_6J9sGme9g" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6sPRtIyeEeOA_6J9sGme9g" type="_6rlKYIyeEeOA_6J9sGme9g" direction="return"/>
          <language>java</language>
          <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6sP4wIyeEeOA_6J9sGme9g" name="toString" specification="_6oD8UIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6sP4wYyeEeOA_6J9sGme9g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _lexeme;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6sQf0IyeEeOA_6J9sGme9g" name="getName" specification="_6ok5sIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6sQf0YyeEeOA_6J9sGme9g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _name;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6sRG4IyeEeOA_6J9sGme9g" name="getLexeme" specification="_6o_JYIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6sRG4YyeEeOA_6J9sGme9g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _lexeme;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_6n91sIyeEeOA_6J9sGme9g" name="Token" method="_6sODkIyeEeOA_6J9sGme9g">
          <eAnnotations xmi:id="_6n_q4IyeEeOA_6J9sGme9g" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_6n_q4YyeEeOA_6J9sGme9g" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_6sVYUIyeEeOA_6J9sGme9g">
            <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the index value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
          </ownedComment>
          <ownedParameter xmi:id="_6n-cwIyeEeOA_6J9sGme9g" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6n_D0IyeEeOA_6J9sGme9g" name="lexeme">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6n_q4oyeEeOA_6J9sGme9g" type="_MBYJEIcvEeO394xrVBhzLQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_6oD8UIyeEeOA_6J9sGme9g" name="toString" method="_6sP4wIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6ogBMIyeEeOA_6J9sGme9g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6ok5sIyeEeOA_6J9sGme9g" name="getName" method="_6sQf0IyeEeOA_6J9sGme9g">
          <ownedComment xmi:id="_6sWmcIyeEeOA_6J9sGme9g">
            <body>Accessor for the name of the token&#xD;
	 * @return The name of the token</body>
          </ownedComment>
          <ownedParameter xmi:id="_6o0xUIyeEeOA_6J9sGme9g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6o_JYIyeEeOA_6J9sGme9g" name="getLexeme" method="_6sRG4IyeEeOA_6J9sGme9g">
          <ownedComment xmi:id="_6sXNgIyeEeOA_6J9sGme9g">
            <body>Accessor for the token's lexeme&#xD;
	 * @return The token's lexeme</body>
          </ownedComment>
          <ownedParameter xmi:id="_6pMkwIyeEeOA_6J9sGme9g" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6rr4EIyeEeOA_6J9sGme9g" name="execute" method="_6sPRsIyeEeOA_6J9sGme9g">
          <ownedParameter xmi:id="_6rsfIIyeEeOA_6J9sGme9g" name="algo" type="_KNB2kIcvEeO394xrVBhzLQ"/>
          <ownedParameter xmi:id="_6rsfIYyeEeOA_6J9sGme9g" name="params" type="_6ro0wIyeEeOA_6J9sGme9g">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6r1pEIyeEeOA_6J9sGme9g" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6rttQIyeEeOA_6J9sGme9g" type="_6rlKYIyeEeOA_6J9sGme9g" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Pv5pQYcvEeO394xrVBhzLQ" name="ATokVisitor"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_WlSMsIcvEeO394xrVBhzLQ" name="ITokVisitorCmd"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_rBeGIIyXEeOA_6J9sGme9g" name="ITokenFactory"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBgiYIyXEeOA_6J9sGme9g" name="TokenFactory"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6rlKYIyeEeOA_6J9sGme9g" name="R"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_6ro0wIyeEeOA_6J9sGme9g" name="P"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_6sa34IyeEeOA_6J9sGme9g" name="" memberEnd="_6sa34YyeEeOA_6J9sGme9g _6sCdYIyeEeOA_6J9sGme9g">
        <ownedEnd xmi:id="_6sa34YyeEeOA_6J9sGme9g" name="" type="_MBYJEIcvEeO394xrVBhzLQ" association="_6sa34IyeEeOA_6J9sGme9g"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_lZV24IcvEeO394xrVBhzLQ" name="util">
      <packagedElement xmi:type="uml:Interface" xmi:id="_laiwwIcvEeO394xrVBhzLQ" name="ILambda"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_MiiMkIyZEeOA_6J9sGme9g" name="FatalError"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_MjRMYIyZEeOA_6J9sGme9g" name="ConfigLineReader"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_lZV24YcvEeO394xrVBhzLQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_lZWd8IcvEeO394xrVBhzLQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_rBWKUIyXEeOA_6J9sGme9g" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rBZNoIyXEeOA_6J9sGme9g" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBbp4IyXEeOA_6J9sGme9g" name="Stack"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_MVPXcIyZEeOA_6J9sGme9g" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_MieiMIyZEeOA_6J9sGme9g" name="Matcher"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_MigXYIyZEeOA_6J9sGme9g" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Mibe4IyZEeOA_6J9sGme9g" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MidUEIyZEeOA_6J9sGme9g" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_MjDxAYyZEeOA_6J9sGme9g" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjJQkIyZEeOA_6J9sGme9g" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjLFwIyZEeOA_6J9sGme9g" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjM68IyZEeOA_6J9sGme9g" name="HashSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjOJEYyZEeOA_6J9sGme9g" name="LinkedHashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_MjP-QIyZEeOA_6J9sGme9g" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_q6O1sIyXEeOA_6J9sGme9g" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_rBIu8IyXEeOA_6J9sGme9g" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBMZUIyXEeOA_6J9sGme9g" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBO1kIyXEeOA_6J9sGme9g" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBRR0IyXEeOA_6J9sGme9g" name="StreamTokenizer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBTuEIyXEeOA_6J9sGme9g" name="StringReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjFmMIyZEeOA_6J9sGme9g" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjG0UIyZEeOA_6J9sGme9g" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_MjHbYYyZEeOA_6J9sGme9g" name="FileReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rDNykIyXEeOA_6J9sGme9g" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_rDNykYyXEeOA_6J9sGme9g" name="Object"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rDW8gIyXEeOA_6J9sGme9g" name="Iterable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Mj0mAIyZEeOA_6J9sGme9g" name="StringBuilder"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_q6UVQIyXEeOA_6J9sGme9g" name="wordtree">
      <packagedElement xmi:type="uml:Interface" xmi:id="_rBjlsIyXEeOA_6J9sGme9g" name="IWordTreeVisitor"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBmB8IyXEeOA_6J9sGme9g" name="WordTree"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rCO7IIyXEeOA_6J9sGme9g" name="WordTreeFactory"/>
    </packagedElement>
    <profileApplication xmi:id="_kei4AIcuEeO394xrVBhzLQ">
      <eAnnotations xmi:id="_kel7UIcuEeO394xrVBhzLQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_kesB8IcuEeO394xrVBhzLQ" base_Package="_kJtQcIcuEeO394xrVBhzLQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Reference xmi:id="_KNBPgIcvEeO394xrVBhzLQ" base_Element="_KNABYIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_KNCdoIcvEeO394xrVBhzLQ" base_Element="_KNB2kIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_KNGIAIcvEeO394xrVBhzLQ" base_Element="_KNFg8IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_KNHWIIcvEeO394xrVBhzLQ" typeParameterDeclarationValue="R, P" base_Operation="_KNGvEIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KNH9MIcvEeO394xrVBhzLQ" base_Element="_KNGvEIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_KNIkQIcvEeO394xrVBhzLQ" genericsValue="R, String, P, IGrammarSymbol" base_Element="_KNGvEYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Array xmi:id="_KNJLUYcvEeO394xrVBhzLQ" base_Element="_KNGvEocvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_KNJyYIcvEeO394xrVBhzLQ" base_Element="_KNGvEocvEeO394xrVBhzLQ">
    <annotations xmi:id="_KNJyYYcvEeO394xrVBhzLQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_KNJyYocvEeO394xrVBhzLQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_KNOD0IcvEeO394xrVBhzLQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_KNLAgIcvEeO394xrVBhzLQ" base_Element="_KNKZcIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_K4iRsYcvEeO394xrVBhzLQ" genericsValue="String, Void" base_Element="_K4iRsIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_K4kG4IcvEeO394xrVBhzLQ" genericsValue="String,String" base_Element="_K4jf0YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K4kt8IcvEeO394xrVBhzLQ" base_Element="_K4jf0YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_K4nKMIcvEeO394xrVBhzLQ" base_Element="_K4l8EIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_K4oYUIcvEeO394xrVBhzLQ" base_Element="_K4nKMYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_LXk-IIcvEeO394xrVBhzLQ" genericsValue="R, P" base_Element="_K4hDkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_LX1c0IcvEeO394xrVBhzLQ" base_Element="_LX0OsIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_LX4gIIcvEeO394xrVBhzLQ" genericsValue="R, P" base_Element="_LX3SAYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_LX8KgIcvEeO394xrVBhzLQ" genericsValue="R, P" base_Element="_LX68YIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_LX9YoIcvEeO394xrVBhzLQ" genericsValue="R, String, P, IGrammarSymbol" base_Element="_LX8xkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MBZ-QIcvEeO394xrVBhzLQ" base_Element="_MBZXMIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MBalUIcvEeO394xrVBhzLQ" base_Element="_MBZ-QYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_MBdooIcvEeO394xrVBhzLQ" base_Element="_MBdBkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_PuXYMIcvEeO394xrVBhzLQ" genericsValue="R, P" base_Element="_LX5HMIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_PubCkIcvEeO394xrVBhzLQ" genericsValue="R, P" base_Element="_LX2D4IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_PuhwQIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_PugiIIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PuiXUIcvEeO394xrVBhzLQ" base_Element="_PugiIIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_PujlcIcvEeO394xrVBhzLQ" base_Element="_PugiIIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_PujlcYcvEeO394xrVBhzLQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PumBsIcvEeO394xrVBhzLQ" base_Element="_PukzkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_PumBsYcvEeO394xrVBhzLQ" base_Element="_PukzkIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_PumBsocvEeO394xrVBhzLQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Pu4VkIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_Pu3ugIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_PvuDEIcvEeO394xrVBhzLQ" genericsValue="R, String, P, IGrammarSymbol" base_Element="_PvtcAIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_PvxtcocvEeO394xrVBhzLQ" typeParameterDeclarationValue="R, P" base_Operation="_PvxGYIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PvyUgIcvEeO394xrVBhzLQ" base_Element="_PvxGYIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pvy7kIcvEeO394xrVBhzLQ" genericsValue="R, String, P, IGrammarSymbol" base_Element="_PvxtcIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Array xmi:id="_Pvy7kocvEeO394xrVBhzLQ" base_Element="_PvxtcYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_PvzioIcvEeO394xrVBhzLQ" base_Element="_PvxtcYcvEeO394xrVBhzLQ">
    <annotations xmi:id="_PvzioYcvEeO394xrVBhzLQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_PvzioocvEeO394xrVBhzLQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_PwFPcocvEeO394xrVBhzLQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Pv0JsYcvEeO394xrVBhzLQ" typeParameterDeclarationValue="R, P" base_Operation="_Pvzio4cvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Pv0wwIcvEeO394xrVBhzLQ" base_Element="_Pvzio4cvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pv0wwYcvEeO394xrVBhzLQ" genericsValue="R, P" base_Element="_PvzipIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Array xmi:id="_Pv1X0YcvEeO394xrVBhzLQ" base_Element="_Pv0JsIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_Pv1X0ocvEeO394xrVBhzLQ" base_Element="_Pv0JsIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_Pv1X04cvEeO394xrVBhzLQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_Pv1-4IcvEeO394xrVBhzLQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_PwFPc4cvEeO394xrVBhzLQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Pv5CMIcvEeO394xrVBhzLQ" base_Element="_Pv30EIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pv5pQIcvEeO394xrVBhzLQ" genericsValue="R, String, P, IGrammarSymbol" base_Element="_Pv5CMYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_Pv6QUIcvEeO394xrVBhzLQ" base_Element="_Pv5pQYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pv7ecIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_Pv63YIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Pv7ecocvEeO394xrVBhzLQ" base_Element="_Pv63YIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pv8FgIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_Pv63YYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_Pv8skIcvEeO394xrVBhzLQ" base_Element="_Pv63YIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_Pv8skYcvEeO394xrVBhzLQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Pv9ToYcvEeO394xrVBhzLQ" base_Element="_Pv9ToIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pv96sYcvEeO394xrVBhzLQ" genericsValue="String, IGrammarSymbol" base_Element="_Pv96sIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_Pv_v4IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_Pv_I0IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_PwAW8IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_Pv_I0YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PwA-AIcvEeO394xrVBhzLQ" base_Element="_PwAW8YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PwBlEIcvEeO394xrVBhzLQ" base_Element="_PwA-AYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PwCMIIcvEeO394xrVBhzLQ" base_Element="_PwBlEYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_PwCzMIcvEeO394xrVBhzLQ" base_Element="_PwCMIYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_PwHrsIcvEeO394xrVBhzLQ" base_Element="_PwHEoIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_PwISwIcvEeO394xrVBhzLQ" base_Element="_PwHrsYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_PwJg4IcvEeO394xrVBhzLQ" base_Element="_PwI50IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WkIWIIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WkHIAIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WkI9MIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WkIWIYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WkPD0IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WkOcwIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WkW_oIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WkWYkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WkYNwIcvEeO394xrVBhzLQ" base_Element="_WkXmsIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_WkYNwYcvEeO394xrVBhzLQ" base_Element="_WkXmsIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_WkYNwocvEeO394xrVBhzLQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_WlExUIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WlDjMYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WlF_cIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WlDjMocvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WlH0oocvEeO394xrVBhzLQ" base_Element="_WlHNkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Array xmi:id="_WlIbsYcvEeO394xrVBhzLQ" base_Element="_WlHNlYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WlK38IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WlKQ4YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WlLfAIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WlKQ4ocvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WlNUM4cvEeO394xrVBhzLQ" base_Element="_WlMtIIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Array xmi:id="_WlOiUocvEeO394xrVBhzLQ" base_Element="_WlNUMIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WlQ-kIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WlQXgIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_WlRloIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_WlQXgYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_WlSzwIcvEeO394xrVBhzLQ" base_Element="_WlSMsIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WlUB4IcvEeO394xrVBhzLQ" base_Element="_WlTa0IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WlUo8IcvEeO394xrVBhzLQ" base_Element="_WlUB4YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_WlckwIcvEeO394xrVBhzLQ" base_Element="_Wlb9sIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_Wldy4IcvEeO394xrVBhzLQ" base_Element="_WlckwYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_iLn9sIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_iLmvkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iLpy4IcvEeO394xrVBhzLQ" base_Element="_iLokwIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_iLqZ8IcvEeO394xrVBhzLQ" base_Element="_iLokwIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_iLqZ8YcvEeO394xrVBhzLQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_iL2nMIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_iL2AIYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_iL3OQIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_iL2AIocvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iL4cYIcvEeO394xrVBhzLQ" base_Element="_iL31UIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_iL6RkocvEeO394xrVBhzLQ" base_Element="_iL6RkIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_lZr1IIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_lZpY4IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_laZm0IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_laY_wIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_laa08IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_laY_wYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_lafGY4cvEeO394xrVBhzLQ" typeParameterDeclarationValue="R, P" base_Operation="_lafGYIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_laftcYcvEeO394xrVBhzLQ" base_Element="_lafGYIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_lagUgIcvEeO394xrVBhzLQ" genericsValue="R, String, P, IGrammarSymbol" base_Element="_lafGYYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Array xmi:id="_lagUgocvEeO394xrVBhzLQ" base_Element="_lafGYocvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Annotations xmi:id="_lag7kIcvEeO394xrVBhzLQ" base_Element="_lafGYocvEeO394xrVBhzLQ">
    <annotations xmi:id="_lag7kYcvEeO394xrVBhzLQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_lag7kocvEeO394xrVBhzLQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_latv4ocvEeO394xrVBhzLQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_lag7k4cvEeO394xrVBhzLQ" base_Element="_lafGYIcvEeO394xrVBhzLQ">
    <annotations xmi:id="_lahioIcvEeO394xrVBhzLQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_lajX0IcvEeO394xrVBhzLQ" base_Element="_laiwwIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_lakl8IcvEeO394xrVBhzLQ" base_Element="_laj-4IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_lal0EIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_lalNAIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_lambIIcvEeO394xrVBhzLQ" base_Element="_lalNAIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_lanCMIcvEeO394xrVBhzLQ" base_Element="_lambIYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_lanpQIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_lanCMYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_lanpQYcvEeO394xrVBhzLQ" base_Element="_lanCMYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_lao3YIcvEeO394xrVBhzLQ" genericsValue="Object, Object" base_Element="_laoQUIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_lao3YocvEeO394xrVBhzLQ" base_Element="_laoQUIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_lapecYcvEeO394xrVBhzLQ" base_Element="_lapecIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_laqFgYcvEeO394xrVBhzLQ" base_Element="_laqFgIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_lawMIIcvEeO394xrVBhzLQ" base_Element="_lavlEIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_lawzMIcvEeO394xrVBhzLQ" base_Element="_lawMIYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_laxaQocvEeO394xrVBhzLQ" base_Element="_laxaQIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_layBUocvEeO394xrVBhzLQ" base_Element="_layBUIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_layoYocvEeO394xrVBhzLQ" base_Element="_layoYIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_lazPcocvEeO394xrVBhzLQ" base_Element="_lazPcIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_laz2gocvEeO394xrVBhzLQ" base_Element="_laz2gIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_nWxz8IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_nWxM4IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_nXN40IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_nXNRwYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_nXPG8IcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_nXOf4IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_nXPuAIcvEeO394xrVBhzLQ" genericsValue="IGrammarSymbol, Object" base_Element="_nXOf4YcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nXQ8IIcvEeO394xrVBhzLQ" base_Element="_nXQVEIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Generics xmi:id="_nXRjMIcvEeO394xrVBhzLQ" genericsValue="Object, Object" base_Element="_nXQ8IYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nXRjMocvEeO394xrVBhzLQ" base_Element="_nXQ8IYcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_nXVNkIcvEeO394xrVBhzLQ" base_Element="_nXUmgIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:Reference xmi:id="_nXV0oocvEeO394xrVBhzLQ" base_Element="_nXV0oIcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_pig00IyXEeOA_6J9sGme9g" base_Element="_MBWT4IcvEeO394xrVBhzLQ"/>
  <UMLLabProfile:StyledElement xmi:id="_pijREIyXEeOA_6J9sGme9g" base_Element="_piiC8IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:StyledElement xmi:id="_pjGqsIyXEeOA_6J9sGme9g" base_Element="_pjFckIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_q8gtoIyXEeOA_6J9sGme9g" base_Element="_q8e4cIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:StyledElement xmi:id="_q8h7wIyXEeOA_6J9sGme9g" base_Element="_q8hUsIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:StyledElement xmi:id="_q8jJ4IyXEeOA_6J9sGme9g" base_Element="_q8ii0IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBLyQIyXEeOA_6J9sGme9g" base_Element="_rBIu8IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBOOgIyXEeOA_6J9sGme9g" base_Element="_rBMZUIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBQqwIyXEeOA_6J9sGme9g" base_Element="_rBO1kIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBTHAIyXEeOA_6J9sGme9g" base_Element="_rBRR0IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBVjQIyXEeOA_6J9sGme9g" base_Element="_rBTuEIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBYmkIyXEeOA_6J9sGme9g" base_Element="_rBWKUIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBbC0IyXEeOA_6J9sGme9g" base_Element="_rBZNoIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBdfEIyXEeOA_6J9sGme9g" base_Element="_rBbp4IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBf7UIyXEeOA_6J9sGme9g" base_Element="_rBeGIIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBi-oIyXEeOA_6J9sGme9g" base_Element="_rBgiYIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rBla4IyXEeOA_6J9sGme9g" base_Element="_rBjlsIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rCOUEIyXEeOA_6J9sGme9g" base_Element="_rBmB8IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rCRXYIyXEeOA_6J9sGme9g" base_Element="_rCO7IIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rDQO0IyXEeOA_6J9sGme9g" base_Element="_rDNykYyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rDYxsIyXEeOA_6J9sGme9g" base_Element="_rDW8gIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_rDccEIyXEeOA_6J9sGme9g" genericsValue="String" base_Element="_rDZYwYyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDuI4IyXEeOA_6J9sGme9g" base_Element="_rDs6wIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDwlIIyXEeOA_6J9sGme9g" base_Element="_rDvXAIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rDzocIyXEeOA_6J9sGme9g" base_Element="_rDxzQIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_rD3S0IyXEeOA_6J9sGme9g" genericsValue="Token" base_Element="_rD02kIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rD4g8IyXEeOA_6J9sGme9g" base_Element="_rD02kIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rD8LUIyXEeOA_6J9sGme9g" base_Element="_rD5vEIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_rD_OoIyXEeOA_6J9sGme9g" genericsValue="ITTypeValue" base_Element="_rD9ZcIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rD_1sIyXEeOA_6J9sGme9g" base_Element="_rD9ZcIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_rEDgEIyXEeOA_6J9sGme9g" genericsValue="Token, Void" base_Element="_rEBD0IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rEFVQIyXEeOA_6J9sGme9g" base_Element="_rEBD0IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rEp9AIyXEeOA_6J9sGme9g" base_Element="_rEoH0IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rEsZQIyXEeOA_6J9sGme9g" base_Element="_rEqkEIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rEu1gIyXEeOA_6J9sGme9g" base_Element="_rEtAUIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rExRwIyXEeOA_6J9sGme9g" base_Element="_rEvckIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rEzuAIyXEeOA_6J9sGme9g" base_Element="_rEx40IyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rE2xUIyXEeOA_6J9sGme9g" base_Element="_rE0VEIyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rE5NkIyXEeOA_6J9sGme9g" base_Element="_rE2xUYyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_rE7p0IyXEeOA_6J9sGme9g" base_Element="_rE5NkYyXEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MbzScIyZEeOA_6J9sGme9g" base_Element="_MbyEUIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Annotations xmi:id="_Mb0gkIyZEeOA_6J9sGme9g" base_Element="_MbyEUIyZEeOA_6J9sGme9g">
    <annotations xmi:id="_Mb1HoIyZEeOA_6J9sGme9g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_McICkIyZEeOA_6J9sGme9g" base_Element="_McG0cIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Annotations xmi:id="_McJQsIyZEeOA_6J9sGme9g" base_Element="_McG0cIyZEeOA_6J9sGme9g">
    <annotations xmi:id="_McJQsYyZEeOA_6J9sGme9g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_MdacAIyZEeOA_6J9sGme9g" genericsValue="String" base_Element="_MdZ08IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mdn3YIyZEeOA_6J9sGme9g" base_Element="_MdmCMIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Array xmi:id="_MdoecIyZEeOA_6J9sGme9g" base_Element="_MdmCMYyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_Md-csIyZEeOA_6J9sGme9g" genericsValue="String" base_Element="_Md8ngIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MeQwkIyZEeOA_6J9sGme9g" base_Element="_MeKp8IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Annotations xmi:id="_MeR-sIyZEeOA_6J9sGme9g" base_Element="_MeKp8IyZEeOA_6J9sGme9g">
    <annotations xmi:id="_MeR-sYyZEeOA_6J9sGme9g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_MictAIyZEeOA_6J9sGme9g" base_Element="_Mibe4IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_Mid7IIyZEeOA_6J9sGme9g" base_Element="_MidUEIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MifwUIyZEeOA_6J9sGme9g" base_Element="_MieiMIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MihlgIyZEeOA_6J9sGme9g" base_Element="_MigXYIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MijasIyZEeOA_6J9sGme9g" base_Element="_MiiMkIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MiqIYIyZEeOA_6J9sGme9g" base_Element="_Mio6QIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Annotations xmi:id="_MiskoIyZEeOA_6J9sGme9g" base_Element="_Mio6QIyZEeOA_6J9sGme9g">
    <annotations xmi:id="_MiskoYyZEeOA_6J9sGme9g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_MixdIIyZEeOA_6J9sGme9g" genericsValue="Token" base_Element="_Mivn8IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjE_IIyZEeOA_6J9sGme9g" base_Element="_MjDxAYyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjGNQIyZEeOA_6J9sGme9g" base_Element="_MjFmMIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjHbYIyZEeOA_6J9sGme9g" base_Element="_MjG0UIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjIpgIyZEeOA_6J9sGme9g" base_Element="_MjHbYYyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjKesIyZEeOA_6J9sGme9g" base_Element="_MjJQkIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjMT4IyZEeOA_6J9sGme9g" base_Element="_MjLFwIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjOJEIyZEeOA_6J9sGme9g" base_Element="_MjM68IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjPXMIyZEeOA_6J9sGme9g" base_Element="_MjOJEYyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjQlUIyZEeOA_6J9sGme9g" base_Element="_MjP-QIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MjSagIyZEeOA_6J9sGme9g" base_Element="_MjRMYIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_Mj10IIyZEeOA_6J9sGme9g" base_Element="_Mj0mAIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_Mj8h0IyZEeOA_6J9sGme9g" base_Element="_Mj7TsIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Mj-XAIyZEeOA_6J9sGme9g" typeParameterDeclarationValue="T extends Comparable&lt;? super T>" base_Operation="_Mj9v8IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkAMMIyZEeOA_6J9sGme9g" base_Element="_Mj9v8IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Array xmi:id="_MkAzQIyZEeOA_6J9sGme9g" base_Element="_Mj9v8YyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_MkHg8IyZEeOA_6J9sGme9g" genericsValue="String, String" base_Element="_MkGS0IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_MkLLUIyZEeOA_6J9sGme9g" genericsValue="String, String" base_Element="_MkJWIYyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_MkU8UIyZEeOA_6J9sGme9g" genericsValue="Token" base_Element="_MkTuMIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkWKcIyZEeOA_6J9sGme9g" base_Element="_MkTuMIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkbC8IyZEeOA_6J9sGme9g" base_Element="_MkZ00IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mkc4IIyZEeOA_6J9sGme9g" base_Element="_MkbqAIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkeGQIyZEeOA_6J9sGme9g" base_Element="_Mkc4IYyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mkf7cIyZEeOA_6J9sGme9g" base_Element="_MketUIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkhJkIyZEeOA_6J9sGme9g" base_Element="_MkgigIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mki-wIyZEeOA_6J9sGme9g" base_Element="_MkhwoIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MkoeUIyZEeOA_6J9sGme9g" base_Element="_MkmCEIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_MksIsIyZEeOA_6J9sGme9g" base_Element="_Mkq6kIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Mkt94IyZEeOA_6J9sGme9g" base_Element="_MksvwIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MlgBAIyZEeOA_6J9sGme9g" base_Element="_MleL0IyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_Mlh2MIyZEeOA_6J9sGme9g" base_Element="_MlgoEIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MljrYIyZEeOA_6J9sGme9g" base_Element="_MlidQIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_MllgkIyZEeOA_6J9sGme9g" base_Element="_MlkScIyZEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6ohPUIyeEeOA_6J9sGme9g" base_Element="_6oD8UIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Annotations xmi:id="_6okSoIyeEeOA_6J9sGme9g" base_Element="_6oD8UIyeEeOA_6J9sGme9g">
    <annotations xmi:id="_6okSoYyeEeOA_6J9sGme9g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6qBrMIyeEeOA_6J9sGme9g" genericsValue="String, Token" base_Element="_6p2sEIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_6rmYgIyeEeOA_6J9sGme9g" base_Element="_6rlKYIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_6rrRAIyeEeOA_6J9sGme9g" base_Element="_6ro0wIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_6rtGMIyeEeOA_6J9sGme9g" typeParameterDeclarationValue="R, P" base_Operation="_6rr4EIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6rxXoIyeEeOA_6J9sGme9g" base_Element="_6rr4EIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Generics xmi:id="_6rzM0IyeEeOA_6J9sGme9g" genericsValue="R, String, P, Token" base_Element="_6rsfIIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Array xmi:id="_6r2QIIyeEeOA_6J9sGme9g" base_Element="_6rsfIYyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Annotations xmi:id="_6r3eQIyeEeOA_6J9sGme9g" base_Element="_6rsfIYyeEeOA_6J9sGme9g">
    <annotations xmi:id="_6r3eQYyeEeOA_6J9sGme9g" name="SuppressWarnings">
      <annotationParameters xmi:id="_6r4sYIyeEeOA_6J9sGme9g" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_6sV_YIyeEeOA_6J9sGme9g" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_6r56gIyeEeOA_6J9sGme9g" base_Element="_6rr4EIyeEeOA_6J9sGme9g">
    <annotations xmi:id="_6r56gYyeEeOA_6J9sGme9g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6sGHwIyeEeOA_6J9sGme9g" base_Element="_6sESkIyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6sH88IyeEeOA_6J9sGme9g" base_Element="_6sGu0IyeEeOA_6J9sGme9g"/>
  <UMLLabProfile:Reference xmi:id="_6sbe8IyeEeOA_6J9sGme9g" base_Element="_6sa34IyeEeOA_6J9sGme9g"/>
</xmi:XMI>
